# Makefile.in generated by automake 1.14.1 from Makefile.am.
# slp/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.







am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/ola
pkgincludedir = $(includedir)/ola
pkglibdir = $(libdir)/ola
pkglibexecdir = $(libexecdir)/ola
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
DIST_COMMON = $(top_srcdir)/common.mk $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.am $(srcdir)/libolaslpclient.pc.in \
	$(srcdir)/libolaslpserver.pc.in $(top_srcdir)/config/depcomp \
	$(noinst_HEADERS)

# the genererated protobuf files don't compile with -Werror on win32
am__append_1 = -Werror
# Due to MinGW's handling of library archives, we need to append this
#am__append_2 = $(CPPUNIT_LIBS)
noinst_PROGRAMS = slp_client$(EXEEXT) $(am__EXEEXT_2)
am__append_3 = slp_server
#am__append_4 = -lWs2_32
#am__append_5 = -lWs2_32
TESTS = DATrackerTester$(EXEEXT) \
	PacketBuilderTester$(EXEEXT) \
	PacketParserTester$(EXEEXT) \
	RegistrationFileParserTester$(EXEEXT) \
	SLPServerDATester$(EXEEXT) \
	SLPServerNetworkTester$(EXEEXT) \
	SLPServerSATester$(EXEEXT) \
	SLPServerUATester$(EXEEXT) \
	SLPStoreTester$(EXEEXT) \
	SLPStringsTester$(EXEEXT) \
	ScopeSetTester$(EXEEXT) \
	ServiceEntryTester$(EXEEXT) \
	XIDAllocatorTester$(EXEEXT)
check_PROGRAMS = $(am__EXEEXT_1)
subdir = slp
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/ac_prog_java_cc.m4 \
	$(top_srcdir)/config/ac_saleae.m4 \
	$(top_srcdir)/config/acx_pthread.m4 \
	$(top_srcdir)/config/ax_have_epoll.m4 \
	$(top_srcdir)/config/ax_prog_doxygen.m4 \
	$(top_srcdir)/config/ax_python_module.m4 \
	$(top_srcdir)/config/cppunit.m4 \
	$(top_srcdir)/config/libtool.m4 \
	$(top_srcdir)/config/ltoptions.m4 \
	$(top_srcdir)/config/ltsugar.m4 \
	$(top_srcdir)/config/ltversion.m4 \
	$(top_srcdir)/config/lt~obsolete.m4 \
	$(top_srcdir)/config/maven.m4 $(top_srcdir)/config/ola.m4 \
	$(top_srcdir)/config/pkg.m4 $(top_srcdir)/config/resolv.m4 \
	$(top_srcdir)/config/stl_hash.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = libolaslpclient.pc libolaslpserver.pc
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgconfigdir)"
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)
libolaslpclient_la_DEPENDENCIES = ../common/libolacommon.la \
	../ola/libola.la libolaslpproto.la libolaslpcore.la
am_libolaslpclient_la_OBJECTS = SLPClient.lo SLPClientCore.lo
libolaslpclient_la_OBJECTS = $(am_libolaslpclient_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libolaslpcore_la_LIBADD =
am_libolaslpcore_la_OBJECTS = SLPUtil.lo URLEntry.lo
libolaslpcore_la_OBJECTS = $(am_libolaslpcore_la_OBJECTS)
am__DEPENDENCIES_1 =
libolaslpproto_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
nodist_libolaslpproto_la_OBJECTS = libolaslpproto_la-SLP.pb.lo \
	libolaslpproto_la-SLPService.pb.lo
libolaslpproto_la_OBJECTS = $(nodist_libolaslpproto_la_OBJECTS)
libolaslpproto_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libolaslpproto_la_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
libolaslpserver_la_DEPENDENCIES = ../common/libolacommon.la \
	libolaslpcore.la
am_libolaslpserver_la_OBJECTS = DATracker.lo RegistrationFileParser.lo \
	SLPPacketBuilder.lo SLPPacketParser.lo SLPPendingOperations.lo \
	SLPServer.lo SLPStore.lo SLPStrings.lo SLPUDPSender.lo \
	ScopeSet.lo
libolaslpserver_la_OBJECTS = $(am_libolaslpserver_la_OBJECTS)
am__EXEEXT_1 = DATrackerTester$(EXEEXT) \
	PacketBuilderTester$(EXEEXT) \
	PacketParserTester$(EXEEXT) \
	RegistrationFileParserTester$(EXEEXT) \
	SLPServerDATester$(EXEEXT) \
	SLPServerNetworkTester$(EXEEXT) \
	SLPServerSATester$(EXEEXT) \
	SLPServerUATester$(EXEEXT) \
	SLPStoreTester$(EXEEXT) \
	SLPStringsTester$(EXEEXT) \
	ScopeSetTester$(EXEEXT) \
	ServiceEntryTester$(EXEEXT) \
	XIDAllocatorTester$(EXEEXT)
am__EXEEXT_2 = slp_server$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)
am_DATrackerTester_OBJECTS = DATrackerTester-DATrackerTest.$(OBJEXT)
DATrackerTester_OBJECTS = $(am_DATrackerTester_OBJECTS)
#am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
am__DEPENDENCIES_3 = $(am__DEPENDENCIES_1) \
	$(top_builddir)/common/testing/libolatesting.la \
	$(top_builddir)/common/testing/libtestmain.la \
	$(am__DEPENDENCIES_2)
am__DEPENDENCIES_4 = $(am__DEPENDENCIES_3) ../common/libolacommon.la \
	libolaslpcore.la libolaslpserver.la
DATrackerTester_DEPENDENCIES = $(am__DEPENDENCIES_4)
DATrackerTester_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(DATrackerTester_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_PacketBuilderTester_OBJECTS =  \
	PacketBuilderTester-PacketBuilderTest.$(OBJEXT)
PacketBuilderTester_OBJECTS = $(am_PacketBuilderTester_OBJECTS)
PacketBuilderTester_DEPENDENCIES = $(am__DEPENDENCIES_4)
PacketBuilderTester_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(PacketBuilderTester_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_PacketParserTester_OBJECTS =  \
	PacketParserTester-PacketParserTest.$(OBJEXT)
PacketParserTester_OBJECTS = $(am_PacketParserTester_OBJECTS)
PacketParserTester_DEPENDENCIES = $(am__DEPENDENCIES_4)
PacketParserTester_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(PacketParserTester_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_RegistrationFileParserTester_OBJECTS = RegistrationFileParserTester-RegistrationFileParserTest.$(OBJEXT)
RegistrationFileParserTester_OBJECTS =  \
	$(am_RegistrationFileParserTester_OBJECTS)
RegistrationFileParserTester_DEPENDENCIES = $(am__DEPENDENCIES_4)
RegistrationFileParserTester_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(RegistrationFileParserTester_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_SLPServerDATester_OBJECTS =  \
	SLPServerDATester-SLPServerTestHelper.$(OBJEXT) \
	SLPServerDATester-SLPServerDATest.$(OBJEXT)
SLPServerDATester_OBJECTS = $(am_SLPServerDATester_OBJECTS)
SLPServerDATester_DEPENDENCIES = $(am__DEPENDENCIES_4)
SLPServerDATester_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(SLPServerDATester_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_SLPServerNetworkTester_OBJECTS =  \
	SLPServerNetworkTester-SLPServerTestHelper.$(OBJEXT) \
	SLPServerNetworkTester-SLPServerNetworkTest.$(OBJEXT)
SLPServerNetworkTester_OBJECTS = $(am_SLPServerNetworkTester_OBJECTS)
SLPServerNetworkTester_DEPENDENCIES = $(am__DEPENDENCIES_4)
SLPServerNetworkTester_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(SLPServerNetworkTester_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_SLPServerSATester_OBJECTS =  \
	SLPServerSATester-SLPServerTestHelper.$(OBJEXT) \
	SLPServerSATester-SLPServerSATest.$(OBJEXT)
SLPServerSATester_OBJECTS = $(am_SLPServerSATester_OBJECTS)
SLPServerSATester_DEPENDENCIES = $(am__DEPENDENCIES_4)
SLPServerSATester_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(SLPServerSATester_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_SLPServerUATester_OBJECTS =  \
	SLPServerUATester-SLPServerTestHelper.$(OBJEXT) \
	SLPServerUATester-SLPServerUATest.$(OBJEXT)
SLPServerUATester_OBJECTS = $(am_SLPServerUATester_OBJECTS)
SLPServerUATester_DEPENDENCIES = $(am__DEPENDENCIES_4)
SLPServerUATester_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(SLPServerUATester_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_SLPStoreTester_OBJECTS = SLPStoreTester-SLPStoreTest.$(OBJEXT)
SLPStoreTester_OBJECTS = $(am_SLPStoreTester_OBJECTS)
SLPStoreTester_DEPENDENCIES = $(am__DEPENDENCIES_4)
SLPStoreTester_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(SLPStoreTester_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_SLPStringsTester_OBJECTS =  \
	SLPStringsTester-SLPStringsTest.$(OBJEXT)
SLPStringsTester_OBJECTS = $(am_SLPStringsTester_OBJECTS)
SLPStringsTester_DEPENDENCIES = $(am__DEPENDENCIES_4)
SLPStringsTester_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(SLPStringsTester_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_ScopeSetTester_OBJECTS = ScopeSetTester-ScopeSetTest.$(OBJEXT)
ScopeSetTester_OBJECTS = $(am_ScopeSetTester_OBJECTS)
ScopeSetTester_DEPENDENCIES = $(am__DEPENDENCIES_4)
ScopeSetTester_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(ScopeSetTester_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_ServiceEntryTester_OBJECTS =  \
	ServiceEntryTester-ServiceEntryTest.$(OBJEXT) \
	ServiceEntryTester-URLEntryTest.$(OBJEXT)
ServiceEntryTester_OBJECTS = $(am_ServiceEntryTester_OBJECTS)
ServiceEntryTester_DEPENDENCIES = $(am__DEPENDENCIES_4)
ServiceEntryTester_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(ServiceEntryTester_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_XIDAllocatorTester_OBJECTS =  \
	XIDAllocatorTester-XIDAllocatorTest.$(OBJEXT)
XIDAllocatorTester_OBJECTS = $(am_XIDAllocatorTester_OBJECTS)
XIDAllocatorTester_DEPENDENCIES = $(am__DEPENDENCIES_4)
XIDAllocatorTester_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(XIDAllocatorTester_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_slp_client_OBJECTS = slp-client.$(OBJEXT)
slp_client_OBJECTS = $(am_slp_client_OBJECTS)
slp_client_DEPENDENCIES = ../common/libolacommon.la ../ola/libola.la \
	libolaslpclient.la libolaslpcore.la $(am__DEPENDENCIES_1)
am_slp_server_OBJECTS = SLPDaemon.$(OBJEXT) slp-server.$(OBJEXT)
slp_server_OBJECTS = $(am_slp_server_OBJECTS)
slp_server_DEPENDENCIES = ../common/libolacommon.la \
	../common/http/libolahttp.la libolaslpproto.la \
	libolaslpserver.la $(am__DEPENDENCIES_1)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libolaslpclient_la_SOURCES) $(libolaslpcore_la_SOURCES) \
	$(nodist_libolaslpproto_la_SOURCES) \
	$(libolaslpserver_la_SOURCES) $(DATrackerTester_SOURCES) \
	$(PacketBuilderTester_SOURCES) $(PacketParserTester_SOURCES) \
	$(RegistrationFileParserTester_SOURCES) \
	$(SLPServerDATester_SOURCES) $(SLPServerNetworkTester_SOURCES) \
	$(SLPServerSATester_SOURCES) $(SLPServerUATester_SOURCES) \
	$(SLPStoreTester_SOURCES) $(SLPStringsTester_SOURCES) \
	$(ScopeSetTester_SOURCES) $(ServiceEntryTester_SOURCES) \
	$(XIDAllocatorTester_SOURCES) $(slp_client_SOURCES) \
	$(slp_server_SOURCES)
DIST_SOURCES = $(libolaslpclient_la_SOURCES) \
	$(libolaslpcore_la_SOURCES) $(libolaslpserver_la_SOURCES) \
	$(DATrackerTester_SOURCES) $(PacketBuilderTester_SOURCES) \
	$(PacketParserTester_SOURCES) \
	$(RegistrationFileParserTester_SOURCES) \
	$(SLPServerDATester_SOURCES) $(SLPServerNetworkTester_SOURCES) \
	$(SLPServerSATester_SOURCES) $(SLPServerUATester_SOURCES) \
	$(SLPStoreTester_SOURCES) $(SLPStringsTester_SOURCES) \
	$(ScopeSetTester_SOURCES) $(ServiceEntryTester_SOURCES) \
	$(XIDAllocatorTester_SOURCES) $(slp_client_SOURCES) \
	$(slp_server_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(pkgconfig_DATA)
HEADERS = $(noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/wouter/debian/ola/config/missing aclocal-1.14
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AS = as
AUTOCONF = ${SHELL} /home/wouter/debian/ola/config/missing autoconf
AUTOHEADER = ${SHELL} /home/wouter/debian/ola/config/missing autoheader
AUTOMAKE = ${SHELL} /home/wouter/debian/ola/config/missing automake-1.14
AWK = gawk
BISON = bison
CC = gcc
CCDEPMODE = depmode=none
CFLAGS = -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -pthread
CPP = gcc -E
CPPFLAGS = -D_FORTIFY_SOURCE=2
CPPUNIT_CFLAGS = 
CPPUNIT_CONFIG = /usr/bin/cppunit-config
CPPUNIT_LIBS = -L/usr/lib/x86_64-linux-gnu -lcppunit -ldl
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=none
CXXFLAGS = -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -pthread
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
DOXYGEN_PAPER_SIZE = 
DOXYGEN_VERSION = 0.9.1
DSYMUTIL = 
DUMPBIN = 
DX_CONFIG = Doxyfile
DX_DOCDIR = doxygen-doc
DX_DOT = 
DX_DOXYGEN = /usr/bin/doxygen
DX_DVIPS = 
DX_EGREP = 
DX_ENV =  SRCDIR='.' PROJECT='OLA' DOCDIR='doxygen-doc' VERSION='0.9.1' PERL_PATH='/usr/bin/perl' HAVE_DOT='NO' GENERATE_MAN='NO' GENERATE_RTF='NO' GENERATE_XML='NO' GENERATE_HTMLHELP='NO' GENERATE_CHI='NO' GENERATE_HTML='YES' GENERATE_LATEX='NO'
DX_FLAG_chi = 0
DX_FLAG_chm = 0
DX_FLAG_doc = 1
DX_FLAG_dot = 0
DX_FLAG_html = 1
DX_FLAG_man = 0
DX_FLAG_pdf = 0
DX_FLAG_ps = 0
DX_FLAG_rtf = 0
DX_FLAG_xml = 0
DX_HHC = 
DX_LATEX = 
DX_MAKEINDEX = 
DX_PDFLATEX = 
DX_PERL = /usr/bin/perl
DX_PROJECT = OLA
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GCJ_OPTS = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
JAVA_CC = 
JAVA_CC_FLAGS = 
JAVA_CC_OPTS = 
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = -Wl,-z,relro
LEX = flex
LEXLIB = 
LEX_OUTPUT_ROOT = lex.yy
LIBOBJS = 
LIBS =  -ldl 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/wouter/debian/ola/config/missing makeinfo
MANIFEST_TOOL = :
MAVEN = 
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OLA_PROTOC = $(top_builddir)/protoc/ola_protoc
OLA_SERVER_LIBS =  -lolaartnet -loladummy -lolae131 -lolaespnet -lolaftdidmx -lolakarate -lolakinet -lolamilinst -lolaopendmx -lolaosc -lolapathport -lolarenard -lolasandnet -lolashownet -lolaspi -lolastageprofi -lolauartdmx -lolausbpro -lolausbdmx
OTOOL = 
OTOOL64 = 
PACKAGE = ola
PACKAGE_BUGREPORT = open-lighting@googlegroups.com
PACKAGE_NAME = OLA
PACKAGE_STRING = OLA 0.9.1
PACKAGE_TARNAME = ola
PACKAGE_URL = 
PACKAGE_VERSION = 0.9.1
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PLUGIN_LIBS =  $(top_builddir)/plugins/artnet/libolaartnet.la $(top_builddir)/plugins/dummy/liboladummy.la $(top_builddir)/plugins/e131/libolae131.la $(top_builddir)/plugins/espnet/libolaespnet.la $(top_builddir)/plugins/ftdidmx/libolaftdidmx.la $(top_builddir)/plugins/karate/libolakarate.la $(top_builddir)/plugins/kinet/libolakinet.la $(top_builddir)/plugins/milinst/libolamilinst.la $(top_builddir)/plugins/opendmx/libolaopendmx.la $(top_builddir)/plugins/osc/libolaosc.la $(top_builddir)/plugins/pathport/libolapathport.la $(top_builddir)/plugins/renard/libolarenard.la $(top_builddir)/plugins/sandnet/libolasandnet.la $(top_builddir)/plugins/shownet/libolashownet.la $(top_builddir)/plugins/spi/libolaspi.la $(top_builddir)/plugins/stageprofi/libolastageprofi.la $(top_builddir)/plugins/uartdmx/libolauartdmx.la $(top_builddir)/plugins/usbpro/libolausbpro.la $(top_builddir)/plugins/usbdmx/libolausbdmx.la
PROTOC = /usr/bin/protoc
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_CXX = g++
PTHREAD_CXXFLAGS = -pthread
PTHREAD_LIBS = 
PYTHON = /usr/bin/python
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_PLATFORM = linux2
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 2.7
RANLIB = ranlib
RESOLV_LIBS = -lresolv
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 0.9.1
abs_builddir = /home/wouter/debian/ola/slp
abs_srcdir = /home/wouter/debian/ola/slp
abs_top_builddir = /home/wouter/debian/ola
abs_top_srcdir = /home/wouter/debian/ola
ac_aux_dir = config
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
acx_pthread_config = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
avahi_CFLAGS = 
avahi_LIBS = 
base_uuid_CFLAGS = -I/usr/include/uuid 
base_uuid_LIBS = -luuid 
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = x86_64-linux-gnu
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${prefix}/share/info
install_sh = ${SHELL} /home/wouter/debian/ola/config/install-sh
libSaleaeDevice_LIBS = -lSaleaeDevice
libdir = ${prefix}/lib/x86_64-linux-gnu
libexecdir = ${prefix}/lib/x86_64-linux-gnu
libftdi_CFLAGS = 
libftdi_LIBS = -lftdi 
liblo_CFLAGS = 
liblo_LIBS = -llo -lpthread 
libmicrohttpd_CFLAGS = 
libmicrohttpd_LIBS = -lmicrohttpd 
libprotobuf_CFLAGS = -pthread
libprotobuf_LIBS = -lprotobuf -pthread -lpthread 
libusb_CFLAGS = -I/usr/include/libusb-1.0 
libusb_LIBS = -lusb-1.0 
localedir = ${datarootdir}/locale
localstatedir = /var
mandir = ${prefix}/share/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
openslp_LIBS = -lslp
ossp_uuid_CFLAGS = 
ossp_uuid_LIBS = 
pdfdir = ${docdir}
piddatadir = ${datarootdir}/ola/pids
pkgpyexecdir = ${pyexecdir}/ola
pkgpythondir = ${pythondir}/ola
plugindir = ${prefix}/lib/x86_64-linux-gnu/olad
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib/python2.7/dist-packages
pythondir = ${prefix}/lib/python2.7/dist-packages
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = /etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
uuid_CFLAGS = -I/usr/include/uuid 
uuid_LIBS = -luuid 
www_datadir = ${datarootdir}/olad/www

# here we define common flags for C++ targets
WARNING_CXXFLAGS = -I$(top_srcdir)/include \
                   -I$(top_builddir)/include \
                   -I$(top_srcdir) \
                   -I$(top_builddir) \
                   -Wall -Wformat -W -fvisibility-inlines-hidden \
                   $(libprotobuf_CFLAGS)

COMMON_CXXFLAGS = $(WARNING_CXXFLAGS) $(am__append_1)

# AM_CXXFLAGS is used when target_CXXFLAGS isn't defined
AM_CXXFLAGS = $(COMMON_CXXFLAGS)
COMMON_TESTING_LIBS = $(CPPUNIT_LIBS) \
	$(top_builddir)/common/testing/libolatesting.la \
	$(top_builddir)/common/testing/libtestmain.la $(am__append_2)
COMMON_TESTING_FLAGS = $(COMMON_CXXFLAGS) $(CPPUNIT_CFLAGS) \
                       -DTEST_SRC_DIR=\"$(srcdir)\"

CLEANFILES = *.pb.{h,cc,cpp} *.gcno *.gcda
EXTRA_DIST = SLP.proto
noinst_HEADERS = URLListVerifier.h SLPServerTestHelper.h

# pkg-config
##################################################
pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = libolaslpclient.pc libolaslpserver.pc

# LIBRARIES
##################################################
noinst_LTLIBRARIES = libolaslpproto.la
lib_LTLIBRARIES = libolaslpcore.la \
                  libolaslpserver.la \
                  libolaslpclient.la


# libolaslpproto
nodist_libolaslpproto_la_SOURCES = SLP.pb.cc SLPService.pb.cpp
libolaslpproto_la_LIBADD = $(libprotobuf_LIBS)
# Required, otherwise we get build errors
libolaslpproto_la_CXXFLAGS = $(WARNING_CXXFLAGS)
BUILT_SOURCES = SLP.pb.cc SLP.pb.h SLPService.pb.h SLPService.pb.h

# libolaslpcore
libolaslpcore_la_SOURCES = SLPUtil.cpp SLPUtil.h URLEntry.cpp

# libolaslpserver
# This is an SLP server, without the RPC interface.
libolaslpserver_la_SOURCES = DATracker.cpp DATracker.h \
                             RegistrationFileParser.cpp \
                             RegistrationFileParser.h SLPPacketBuilder.cpp \
                             SLPPacketBuilder.h SLPPacketConstants.h \
                             SLPPacketParser.cpp SLPPacketParser.h \
                             SLPPendingOperations.cpp SLPPendingOperations.h \
                             SLPServer.cpp SLPServer.h SLPStore.cpp \
                             SLPStore.h SLPStrings.cpp SLPStrings.h \
                             SLPUDPSender.cpp SLPUDPSender.h ScopeSet.cpp \
                             ScopeSet.h ServerCommon.h ServiceEntry.h \
                             XIDAllocator.h

libolaslpserver_la_LIBADD = ../common/libolacommon.la \
                            libolaslpcore.la


# libolaslpclient
libolaslpclient_la_SOURCES = SLPClient.cpp SLPClientCore.cpp SLPClientCore.h
libolaslpclient_la_LIBADD = ../common/libolacommon.la \
                            ../ola/libola.la \
                            libolaslpproto.la \
                            libolaslpcore.la

slp_server_SOURCES = SLPDaemon.cpp SLPDaemon.h slp-server.cpp
slp_server_LDADD = ../common/libolacommon.la \
	../common/http/libolahttp.la libolaslpproto.la \
	libolaslpserver.la $(am__append_4)
slp_client_SOURCES = slp-client.cpp
slp_client_LDADD = ../common/libolacommon.la ../ola/libola.la \
	libolaslpclient.la libolaslpcore.la $(am__append_5)
COMMON_TEST_LDADD = $(COMMON_TESTING_LIBS) \
                    ../common/libolacommon.la \
                    libolaslpcore.la \
                    libolaslpserver.la

DATrackerTester_SOURCES = DATrackerTest.cpp
DATrackerTester_CXXFLAGS = $(COMMON_TESTING_FLAGS)
DATrackerTester_LDADD = $(COMMON_TEST_LDADD)
PacketBuilderTester_SOURCES = PacketBuilderTest.cpp
PacketBuilderTester_CXXFLAGS = $(COMMON_TESTING_FLAGS)
PacketBuilderTester_LDADD = $(COMMON_TEST_LDADD)
PacketParserTester_SOURCES = PacketParserTest.cpp
PacketParserTester_CXXFLAGS = $(COMMON_TESTING_FLAGS)
PacketParserTester_LDADD = $(COMMON_TEST_LDADD)
RegistrationFileParserTester_SOURCES = RegistrationFileParserTest.cpp
RegistrationFileParserTester_CXXFLAGS = $(COMMON_TESTING_FLAGS)
RegistrationFileParserTester_LDADD = $(COMMON_TEST_LDADD)
SLPServerDATester_SOURCES = SLPServerTestHelper.cpp \
                            SLPServerDATest.cpp

SLPServerDATester_CXXFLAGS = $(COMMON_TESTING_FLAGS)
SLPServerDATester_LDADD = $(COMMON_TEST_LDADD)
SLPServerSATester_SOURCES = SLPServerTestHelper.cpp \
                            SLPServerSATest.cpp

SLPServerSATester_CXXFLAGS = $(COMMON_TESTING_FLAGS)
SLPServerSATester_LDADD = $(COMMON_TEST_LDADD)
SLPServerUATester_SOURCES = SLPServerTestHelper.cpp \
                            SLPServerUATest.cpp

SLPServerUATester_CXXFLAGS = $(COMMON_TESTING_FLAGS)
SLPServerUATester_LDADD = $(COMMON_TEST_LDADD)
SLPServerNetworkTester_SOURCES = SLPServerTestHelper.cpp \
                                 SLPServerNetworkTest.cpp

SLPServerNetworkTester_CXXFLAGS = $(COMMON_TESTING_FLAGS)
SLPServerNetworkTester_LDADD = $(COMMON_TEST_LDADD)
SLPStoreTester_SOURCES = SLPStoreTest.cpp
SLPStoreTester_CXXFLAGS = $(COMMON_TESTING_FLAGS)
SLPStoreTester_LDADD = $(COMMON_TEST_LDADD)
SLPStringsTester_SOURCES = SLPStringsTest.cpp
SLPStringsTester_CXXFLAGS = $(COMMON_TESTING_FLAGS)
SLPStringsTester_LDADD = $(COMMON_TEST_LDADD)
ScopeSetTester_SOURCES = ScopeSetTest.cpp
ScopeSetTester_CXXFLAGS = $(COMMON_TESTING_FLAGS)
ScopeSetTester_LDADD = $(COMMON_TEST_LDADD)
ServiceEntryTester_SOURCES = ServiceEntryTest.cpp \
                             URLEntryTest.cpp

ServiceEntryTester_CXXFLAGS = $(COMMON_TESTING_FLAGS)
ServiceEntryTester_LDADD = $(COMMON_TEST_LDADD)
XIDAllocatorTester_SOURCES = XIDAllocatorTest.cpp
XIDAllocatorTester_CXXFLAGS = $(COMMON_TESTING_FLAGS)
XIDAllocatorTester_LDADD = $(COMMON_TEST_LDADD)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cc .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/common.mk $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu slp/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu slp/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/common.mk:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
libolaslpclient.pc: $(top_builddir)/config.status $(srcdir)/libolaslpclient.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
libolaslpserver.pc: $(top_builddir)/config.status $(srcdir)/libolaslpserver.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libolaslpclient.la: $(libolaslpclient_la_OBJECTS) $(libolaslpclient_la_DEPENDENCIES) $(EXTRA_libolaslpclient_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK) -rpath $(libdir) $(libolaslpclient_la_OBJECTS) $(libolaslpclient_la_LIBADD) $(LIBS)

libolaslpcore.la: $(libolaslpcore_la_OBJECTS) $(libolaslpcore_la_DEPENDENCIES) $(EXTRA_libolaslpcore_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK) -rpath $(libdir) $(libolaslpcore_la_OBJECTS) $(libolaslpcore_la_LIBADD) $(LIBS)

libolaslpproto.la: $(libolaslpproto_la_OBJECTS) $(libolaslpproto_la_DEPENDENCIES) $(EXTRA_libolaslpproto_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libolaslpproto_la_LINK)  $(libolaslpproto_la_OBJECTS) $(libolaslpproto_la_LIBADD) $(LIBS)

libolaslpserver.la: $(libolaslpserver_la_OBJECTS) $(libolaslpserver_la_DEPENDENCIES) $(EXTRA_libolaslpserver_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK) -rpath $(libdir) $(libolaslpserver_la_OBJECTS) $(libolaslpserver_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

DATrackerTester$(EXEEXT): $(DATrackerTester_OBJECTS) $(DATrackerTester_DEPENDENCIES) $(EXTRA_DATrackerTester_DEPENDENCIES) 
	@rm -f DATrackerTester$(EXEEXT)
	$(AM_V_CXXLD)$(DATrackerTester_LINK) $(DATrackerTester_OBJECTS) $(DATrackerTester_LDADD) $(LIBS)

PacketBuilderTester$(EXEEXT): $(PacketBuilderTester_OBJECTS) $(PacketBuilderTester_DEPENDENCIES) $(EXTRA_PacketBuilderTester_DEPENDENCIES) 
	@rm -f PacketBuilderTester$(EXEEXT)
	$(AM_V_CXXLD)$(PacketBuilderTester_LINK) $(PacketBuilderTester_OBJECTS) $(PacketBuilderTester_LDADD) $(LIBS)

PacketParserTester$(EXEEXT): $(PacketParserTester_OBJECTS) $(PacketParserTester_DEPENDENCIES) $(EXTRA_PacketParserTester_DEPENDENCIES) 
	@rm -f PacketParserTester$(EXEEXT)
	$(AM_V_CXXLD)$(PacketParserTester_LINK) $(PacketParserTester_OBJECTS) $(PacketParserTester_LDADD) $(LIBS)

RegistrationFileParserTester$(EXEEXT): $(RegistrationFileParserTester_OBJECTS) $(RegistrationFileParserTester_DEPENDENCIES) $(EXTRA_RegistrationFileParserTester_DEPENDENCIES) 
	@rm -f RegistrationFileParserTester$(EXEEXT)
	$(AM_V_CXXLD)$(RegistrationFileParserTester_LINK) $(RegistrationFileParserTester_OBJECTS) $(RegistrationFileParserTester_LDADD) $(LIBS)

SLPServerDATester$(EXEEXT): $(SLPServerDATester_OBJECTS) $(SLPServerDATester_DEPENDENCIES) $(EXTRA_SLPServerDATester_DEPENDENCIES) 
	@rm -f SLPServerDATester$(EXEEXT)
	$(AM_V_CXXLD)$(SLPServerDATester_LINK) $(SLPServerDATester_OBJECTS) $(SLPServerDATester_LDADD) $(LIBS)

SLPServerNetworkTester$(EXEEXT): $(SLPServerNetworkTester_OBJECTS) $(SLPServerNetworkTester_DEPENDENCIES) $(EXTRA_SLPServerNetworkTester_DEPENDENCIES) 
	@rm -f SLPServerNetworkTester$(EXEEXT)
	$(AM_V_CXXLD)$(SLPServerNetworkTester_LINK) $(SLPServerNetworkTester_OBJECTS) $(SLPServerNetworkTester_LDADD) $(LIBS)

SLPServerSATester$(EXEEXT): $(SLPServerSATester_OBJECTS) $(SLPServerSATester_DEPENDENCIES) $(EXTRA_SLPServerSATester_DEPENDENCIES) 
	@rm -f SLPServerSATester$(EXEEXT)
	$(AM_V_CXXLD)$(SLPServerSATester_LINK) $(SLPServerSATester_OBJECTS) $(SLPServerSATester_LDADD) $(LIBS)

SLPServerUATester$(EXEEXT): $(SLPServerUATester_OBJECTS) $(SLPServerUATester_DEPENDENCIES) $(EXTRA_SLPServerUATester_DEPENDENCIES) 
	@rm -f SLPServerUATester$(EXEEXT)
	$(AM_V_CXXLD)$(SLPServerUATester_LINK) $(SLPServerUATester_OBJECTS) $(SLPServerUATester_LDADD) $(LIBS)

SLPStoreTester$(EXEEXT): $(SLPStoreTester_OBJECTS) $(SLPStoreTester_DEPENDENCIES) $(EXTRA_SLPStoreTester_DEPENDENCIES) 
	@rm -f SLPStoreTester$(EXEEXT)
	$(AM_V_CXXLD)$(SLPStoreTester_LINK) $(SLPStoreTester_OBJECTS) $(SLPStoreTester_LDADD) $(LIBS)

SLPStringsTester$(EXEEXT): $(SLPStringsTester_OBJECTS) $(SLPStringsTester_DEPENDENCIES) $(EXTRA_SLPStringsTester_DEPENDENCIES) 
	@rm -f SLPStringsTester$(EXEEXT)
	$(AM_V_CXXLD)$(SLPStringsTester_LINK) $(SLPStringsTester_OBJECTS) $(SLPStringsTester_LDADD) $(LIBS)

ScopeSetTester$(EXEEXT): $(ScopeSetTester_OBJECTS) $(ScopeSetTester_DEPENDENCIES) $(EXTRA_ScopeSetTester_DEPENDENCIES) 
	@rm -f ScopeSetTester$(EXEEXT)
	$(AM_V_CXXLD)$(ScopeSetTester_LINK) $(ScopeSetTester_OBJECTS) $(ScopeSetTester_LDADD) $(LIBS)

ServiceEntryTester$(EXEEXT): $(ServiceEntryTester_OBJECTS) $(ServiceEntryTester_DEPENDENCIES) $(EXTRA_ServiceEntryTester_DEPENDENCIES) 
	@rm -f ServiceEntryTester$(EXEEXT)
	$(AM_V_CXXLD)$(ServiceEntryTester_LINK) $(ServiceEntryTester_OBJECTS) $(ServiceEntryTester_LDADD) $(LIBS)

XIDAllocatorTester$(EXEEXT): $(XIDAllocatorTester_OBJECTS) $(XIDAllocatorTester_DEPENDENCIES) $(EXTRA_XIDAllocatorTester_DEPENDENCIES) 
	@rm -f XIDAllocatorTester$(EXEEXT)
	$(AM_V_CXXLD)$(XIDAllocatorTester_LINK) $(XIDAllocatorTester_OBJECTS) $(XIDAllocatorTester_LDADD) $(LIBS)

slp_client$(EXEEXT): $(slp_client_OBJECTS) $(slp_client_DEPENDENCIES) $(EXTRA_slp_client_DEPENDENCIES) 
	@rm -f slp_client$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(slp_client_OBJECTS) $(slp_client_LDADD) $(LIBS)

slp_server$(EXEEXT): $(slp_server_OBJECTS) $(slp_server_DEPENDENCIES) $(EXTRA_slp_server_DEPENDENCIES) 
	@rm -f slp_server$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(slp_server_OBJECTS) $(slp_server_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

#include ./$(DEPDIR)/DATracker.Plo
#include ./$(DEPDIR)/DATrackerTester-DATrackerTest.Po
#include ./$(DEPDIR)/PacketBuilderTester-PacketBuilderTest.Po
#include ./$(DEPDIR)/PacketParserTester-PacketParserTest.Po
#include ./$(DEPDIR)/RegistrationFileParser.Plo
#include ./$(DEPDIR)/RegistrationFileParserTester-RegistrationFileParserTest.Po
#include ./$(DEPDIR)/SLPClient.Plo
#include ./$(DEPDIR)/SLPClientCore.Plo
#include ./$(DEPDIR)/SLPDaemon.Po
#include ./$(DEPDIR)/SLPPacketBuilder.Plo
#include ./$(DEPDIR)/SLPPacketParser.Plo
#include ./$(DEPDIR)/SLPPendingOperations.Plo
#include ./$(DEPDIR)/SLPServer.Plo
#include ./$(DEPDIR)/SLPServerDATester-SLPServerDATest.Po
#include ./$(DEPDIR)/SLPServerDATester-SLPServerTestHelper.Po
#include ./$(DEPDIR)/SLPServerNetworkTester-SLPServerNetworkTest.Po
#include ./$(DEPDIR)/SLPServerNetworkTester-SLPServerTestHelper.Po
#include ./$(DEPDIR)/SLPServerSATester-SLPServerSATest.Po
#include ./$(DEPDIR)/SLPServerSATester-SLPServerTestHelper.Po
#include ./$(DEPDIR)/SLPServerUATester-SLPServerTestHelper.Po
#include ./$(DEPDIR)/SLPServerUATester-SLPServerUATest.Po
#include ./$(DEPDIR)/SLPStore.Plo
#include ./$(DEPDIR)/SLPStoreTester-SLPStoreTest.Po
#include ./$(DEPDIR)/SLPStrings.Plo
#include ./$(DEPDIR)/SLPStringsTester-SLPStringsTest.Po
#include ./$(DEPDIR)/SLPUDPSender.Plo
#include ./$(DEPDIR)/SLPUtil.Plo
#include ./$(DEPDIR)/ScopeSet.Plo
#include ./$(DEPDIR)/ScopeSetTester-ScopeSetTest.Po
#include ./$(DEPDIR)/ServiceEntryTester-ServiceEntryTest.Po
#include ./$(DEPDIR)/ServiceEntryTester-URLEntryTest.Po
#include ./$(DEPDIR)/URLEntry.Plo
#include ./$(DEPDIR)/XIDAllocatorTester-XIDAllocatorTest.Po
#include ./$(DEPDIR)/libolaslpproto_la-SLP.pb.Plo
#include ./$(DEPDIR)/libolaslpproto_la-SLPService.pb.Plo
#include ./$(DEPDIR)/slp-client.Po
#include ./$(DEPDIR)/slp-server.Po

.cc.o:
#	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
#	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
#	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(LTCXXCOMPILE) -c -o $@ $<

libolaslpproto_la-SLP.pb.lo: SLP.pb.cc
#	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libolaslpproto_la_CXXFLAGS) $(CXXFLAGS) -MT libolaslpproto_la-SLP.pb.lo -MD -MP -MF $(DEPDIR)/libolaslpproto_la-SLP.pb.Tpo -c -o libolaslpproto_la-SLP.pb.lo `test -f 'SLP.pb.cc' || echo '$(srcdir)/'`SLP.pb.cc
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libolaslpproto_la-SLP.pb.Tpo $(DEPDIR)/libolaslpproto_la-SLP.pb.Plo
#	$(AM_V_CXX)source='SLP.pb.cc' object='libolaslpproto_la-SLP.pb.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libolaslpproto_la_CXXFLAGS) $(CXXFLAGS) -c -o libolaslpproto_la-SLP.pb.lo `test -f 'SLP.pb.cc' || echo '$(srcdir)/'`SLP.pb.cc

libolaslpproto_la-SLPService.pb.lo: SLPService.pb.cpp
#	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libolaslpproto_la_CXXFLAGS) $(CXXFLAGS) -MT libolaslpproto_la-SLPService.pb.lo -MD -MP -MF $(DEPDIR)/libolaslpproto_la-SLPService.pb.Tpo -c -o libolaslpproto_la-SLPService.pb.lo `test -f 'SLPService.pb.cpp' || echo '$(srcdir)/'`SLPService.pb.cpp
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libolaslpproto_la-SLPService.pb.Tpo $(DEPDIR)/libolaslpproto_la-SLPService.pb.Plo
#	$(AM_V_CXX)source='SLPService.pb.cpp' object='libolaslpproto_la-SLPService.pb.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libolaslpproto_la_CXXFLAGS) $(CXXFLAGS) -c -o libolaslpproto_la-SLPService.pb.lo `test -f 'SLPService.pb.cpp' || echo '$(srcdir)/'`SLPService.pb.cpp

DATrackerTester-DATrackerTest.o: DATrackerTest.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(DATrackerTester_CXXFLAGS) $(CXXFLAGS) -MT DATrackerTester-DATrackerTest.o -MD -MP -MF $(DEPDIR)/DATrackerTester-DATrackerTest.Tpo -c -o DATrackerTester-DATrackerTest.o `test -f 'DATrackerTest.cpp' || echo '$(srcdir)/'`DATrackerTest.cpp
#	$(AM_V_at)$(am__mv) $(DEPDIR)/DATrackerTester-DATrackerTest.Tpo $(DEPDIR)/DATrackerTester-DATrackerTest.Po
#	$(AM_V_CXX)source='DATrackerTest.cpp' object='DATrackerTester-DATrackerTest.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(DATrackerTester_CXXFLAGS) $(CXXFLAGS) -c -o DATrackerTester-DATrackerTest.o `test -f 'DATrackerTest.cpp' || echo '$(srcdir)/'`DATrackerTest.cpp

DATrackerTester-DATrackerTest.obj: DATrackerTest.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(DATrackerTester_CXXFLAGS) $(CXXFLAGS) -MT DATrackerTester-DATrackerTest.obj -MD -MP -MF $(DEPDIR)/DATrackerTester-DATrackerTest.Tpo -c -o DATrackerTester-DATrackerTest.obj `if test -f 'DATrackerTest.cpp'; then $(CYGPATH_W) 'DATrackerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/DATrackerTest.cpp'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/DATrackerTester-DATrackerTest.Tpo $(DEPDIR)/DATrackerTester-DATrackerTest.Po
#	$(AM_V_CXX)source='DATrackerTest.cpp' object='DATrackerTester-DATrackerTest.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(DATrackerTester_CXXFLAGS) $(CXXFLAGS) -c -o DATrackerTester-DATrackerTest.obj `if test -f 'DATrackerTest.cpp'; then $(CYGPATH_W) 'DATrackerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/DATrackerTest.cpp'; fi`

PacketBuilderTester-PacketBuilderTest.o: PacketBuilderTest.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(PacketBuilderTester_CXXFLAGS) $(CXXFLAGS) -MT PacketBuilderTester-PacketBuilderTest.o -MD -MP -MF $(DEPDIR)/PacketBuilderTester-PacketBuilderTest.Tpo -c -o PacketBuilderTester-PacketBuilderTest.o `test -f 'PacketBuilderTest.cpp' || echo '$(srcdir)/'`PacketBuilderTest.cpp
#	$(AM_V_at)$(am__mv) $(DEPDIR)/PacketBuilderTester-PacketBuilderTest.Tpo $(DEPDIR)/PacketBuilderTester-PacketBuilderTest.Po
#	$(AM_V_CXX)source='PacketBuilderTest.cpp' object='PacketBuilderTester-PacketBuilderTest.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(PacketBuilderTester_CXXFLAGS) $(CXXFLAGS) -c -o PacketBuilderTester-PacketBuilderTest.o `test -f 'PacketBuilderTest.cpp' || echo '$(srcdir)/'`PacketBuilderTest.cpp

PacketBuilderTester-PacketBuilderTest.obj: PacketBuilderTest.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(PacketBuilderTester_CXXFLAGS) $(CXXFLAGS) -MT PacketBuilderTester-PacketBuilderTest.obj -MD -MP -MF $(DEPDIR)/PacketBuilderTester-PacketBuilderTest.Tpo -c -o PacketBuilderTester-PacketBuilderTest.obj `if test -f 'PacketBuilderTest.cpp'; then $(CYGPATH_W) 'PacketBuilderTest.cpp'; else $(CYGPATH_W) '$(srcdir)/PacketBuilderTest.cpp'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/PacketBuilderTester-PacketBuilderTest.Tpo $(DEPDIR)/PacketBuilderTester-PacketBuilderTest.Po
#	$(AM_V_CXX)source='PacketBuilderTest.cpp' object='PacketBuilderTester-PacketBuilderTest.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(PacketBuilderTester_CXXFLAGS) $(CXXFLAGS) -c -o PacketBuilderTester-PacketBuilderTest.obj `if test -f 'PacketBuilderTest.cpp'; then $(CYGPATH_W) 'PacketBuilderTest.cpp'; else $(CYGPATH_W) '$(srcdir)/PacketBuilderTest.cpp'; fi`

PacketParserTester-PacketParserTest.o: PacketParserTest.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(PacketParserTester_CXXFLAGS) $(CXXFLAGS) -MT PacketParserTester-PacketParserTest.o -MD -MP -MF $(DEPDIR)/PacketParserTester-PacketParserTest.Tpo -c -o PacketParserTester-PacketParserTest.o `test -f 'PacketParserTest.cpp' || echo '$(srcdir)/'`PacketParserTest.cpp
#	$(AM_V_at)$(am__mv) $(DEPDIR)/PacketParserTester-PacketParserTest.Tpo $(DEPDIR)/PacketParserTester-PacketParserTest.Po
#	$(AM_V_CXX)source='PacketParserTest.cpp' object='PacketParserTester-PacketParserTest.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(PacketParserTester_CXXFLAGS) $(CXXFLAGS) -c -o PacketParserTester-PacketParserTest.o `test -f 'PacketParserTest.cpp' || echo '$(srcdir)/'`PacketParserTest.cpp

PacketParserTester-PacketParserTest.obj: PacketParserTest.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(PacketParserTester_CXXFLAGS) $(CXXFLAGS) -MT PacketParserTester-PacketParserTest.obj -MD -MP -MF $(DEPDIR)/PacketParserTester-PacketParserTest.Tpo -c -o PacketParserTester-PacketParserTest.obj `if test -f 'PacketParserTest.cpp'; then $(CYGPATH_W) 'PacketParserTest.cpp'; else $(CYGPATH_W) '$(srcdir)/PacketParserTest.cpp'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/PacketParserTester-PacketParserTest.Tpo $(DEPDIR)/PacketParserTester-PacketParserTest.Po
#	$(AM_V_CXX)source='PacketParserTest.cpp' object='PacketParserTester-PacketParserTest.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(PacketParserTester_CXXFLAGS) $(CXXFLAGS) -c -o PacketParserTester-PacketParserTest.obj `if test -f 'PacketParserTest.cpp'; then $(CYGPATH_W) 'PacketParserTest.cpp'; else $(CYGPATH_W) '$(srcdir)/PacketParserTest.cpp'; fi`

RegistrationFileParserTester-RegistrationFileParserTest.o: RegistrationFileParserTest.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RegistrationFileParserTester_CXXFLAGS) $(CXXFLAGS) -MT RegistrationFileParserTester-RegistrationFileParserTest.o -MD -MP -MF $(DEPDIR)/RegistrationFileParserTester-RegistrationFileParserTest.Tpo -c -o RegistrationFileParserTester-RegistrationFileParserTest.o `test -f 'RegistrationFileParserTest.cpp' || echo '$(srcdir)/'`RegistrationFileParserTest.cpp
#	$(AM_V_at)$(am__mv) $(DEPDIR)/RegistrationFileParserTester-RegistrationFileParserTest.Tpo $(DEPDIR)/RegistrationFileParserTester-RegistrationFileParserTest.Po
#	$(AM_V_CXX)source='RegistrationFileParserTest.cpp' object='RegistrationFileParserTester-RegistrationFileParserTest.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RegistrationFileParserTester_CXXFLAGS) $(CXXFLAGS) -c -o RegistrationFileParserTester-RegistrationFileParserTest.o `test -f 'RegistrationFileParserTest.cpp' || echo '$(srcdir)/'`RegistrationFileParserTest.cpp

RegistrationFileParserTester-RegistrationFileParserTest.obj: RegistrationFileParserTest.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RegistrationFileParserTester_CXXFLAGS) $(CXXFLAGS) -MT RegistrationFileParserTester-RegistrationFileParserTest.obj -MD -MP -MF $(DEPDIR)/RegistrationFileParserTester-RegistrationFileParserTest.Tpo -c -o RegistrationFileParserTester-RegistrationFileParserTest.obj `if test -f 'RegistrationFileParserTest.cpp'; then $(CYGPATH_W) 'RegistrationFileParserTest.cpp'; else $(CYGPATH_W) '$(srcdir)/RegistrationFileParserTest.cpp'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/RegistrationFileParserTester-RegistrationFileParserTest.Tpo $(DEPDIR)/RegistrationFileParserTester-RegistrationFileParserTest.Po
#	$(AM_V_CXX)source='RegistrationFileParserTest.cpp' object='RegistrationFileParserTester-RegistrationFileParserTest.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RegistrationFileParserTester_CXXFLAGS) $(CXXFLAGS) -c -o RegistrationFileParserTester-RegistrationFileParserTest.obj `if test -f 'RegistrationFileParserTest.cpp'; then $(CYGPATH_W) 'RegistrationFileParserTest.cpp'; else $(CYGPATH_W) '$(srcdir)/RegistrationFileParserTest.cpp'; fi`

SLPServerDATester-SLPServerTestHelper.o: SLPServerTestHelper.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPServerDATester_CXXFLAGS) $(CXXFLAGS) -MT SLPServerDATester-SLPServerTestHelper.o -MD -MP -MF $(DEPDIR)/SLPServerDATester-SLPServerTestHelper.Tpo -c -o SLPServerDATester-SLPServerTestHelper.o `test -f 'SLPServerTestHelper.cpp' || echo '$(srcdir)/'`SLPServerTestHelper.cpp
#	$(AM_V_at)$(am__mv) $(DEPDIR)/SLPServerDATester-SLPServerTestHelper.Tpo $(DEPDIR)/SLPServerDATester-SLPServerTestHelper.Po
#	$(AM_V_CXX)source='SLPServerTestHelper.cpp' object='SLPServerDATester-SLPServerTestHelper.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPServerDATester_CXXFLAGS) $(CXXFLAGS) -c -o SLPServerDATester-SLPServerTestHelper.o `test -f 'SLPServerTestHelper.cpp' || echo '$(srcdir)/'`SLPServerTestHelper.cpp

SLPServerDATester-SLPServerTestHelper.obj: SLPServerTestHelper.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPServerDATester_CXXFLAGS) $(CXXFLAGS) -MT SLPServerDATester-SLPServerTestHelper.obj -MD -MP -MF $(DEPDIR)/SLPServerDATester-SLPServerTestHelper.Tpo -c -o SLPServerDATester-SLPServerTestHelper.obj `if test -f 'SLPServerTestHelper.cpp'; then $(CYGPATH_W) 'SLPServerTestHelper.cpp'; else $(CYGPATH_W) '$(srcdir)/SLPServerTestHelper.cpp'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/SLPServerDATester-SLPServerTestHelper.Tpo $(DEPDIR)/SLPServerDATester-SLPServerTestHelper.Po
#	$(AM_V_CXX)source='SLPServerTestHelper.cpp' object='SLPServerDATester-SLPServerTestHelper.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPServerDATester_CXXFLAGS) $(CXXFLAGS) -c -o SLPServerDATester-SLPServerTestHelper.obj `if test -f 'SLPServerTestHelper.cpp'; then $(CYGPATH_W) 'SLPServerTestHelper.cpp'; else $(CYGPATH_W) '$(srcdir)/SLPServerTestHelper.cpp'; fi`

SLPServerDATester-SLPServerDATest.o: SLPServerDATest.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPServerDATester_CXXFLAGS) $(CXXFLAGS) -MT SLPServerDATester-SLPServerDATest.o -MD -MP -MF $(DEPDIR)/SLPServerDATester-SLPServerDATest.Tpo -c -o SLPServerDATester-SLPServerDATest.o `test -f 'SLPServerDATest.cpp' || echo '$(srcdir)/'`SLPServerDATest.cpp
#	$(AM_V_at)$(am__mv) $(DEPDIR)/SLPServerDATester-SLPServerDATest.Tpo $(DEPDIR)/SLPServerDATester-SLPServerDATest.Po
#	$(AM_V_CXX)source='SLPServerDATest.cpp' object='SLPServerDATester-SLPServerDATest.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPServerDATester_CXXFLAGS) $(CXXFLAGS) -c -o SLPServerDATester-SLPServerDATest.o `test -f 'SLPServerDATest.cpp' || echo '$(srcdir)/'`SLPServerDATest.cpp

SLPServerDATester-SLPServerDATest.obj: SLPServerDATest.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPServerDATester_CXXFLAGS) $(CXXFLAGS) -MT SLPServerDATester-SLPServerDATest.obj -MD -MP -MF $(DEPDIR)/SLPServerDATester-SLPServerDATest.Tpo -c -o SLPServerDATester-SLPServerDATest.obj `if test -f 'SLPServerDATest.cpp'; then $(CYGPATH_W) 'SLPServerDATest.cpp'; else $(CYGPATH_W) '$(srcdir)/SLPServerDATest.cpp'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/SLPServerDATester-SLPServerDATest.Tpo $(DEPDIR)/SLPServerDATester-SLPServerDATest.Po
#	$(AM_V_CXX)source='SLPServerDATest.cpp' object='SLPServerDATester-SLPServerDATest.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPServerDATester_CXXFLAGS) $(CXXFLAGS) -c -o SLPServerDATester-SLPServerDATest.obj `if test -f 'SLPServerDATest.cpp'; then $(CYGPATH_W) 'SLPServerDATest.cpp'; else $(CYGPATH_W) '$(srcdir)/SLPServerDATest.cpp'; fi`

SLPServerNetworkTester-SLPServerTestHelper.o: SLPServerTestHelper.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPServerNetworkTester_CXXFLAGS) $(CXXFLAGS) -MT SLPServerNetworkTester-SLPServerTestHelper.o -MD -MP -MF $(DEPDIR)/SLPServerNetworkTester-SLPServerTestHelper.Tpo -c -o SLPServerNetworkTester-SLPServerTestHelper.o `test -f 'SLPServerTestHelper.cpp' || echo '$(srcdir)/'`SLPServerTestHelper.cpp
#	$(AM_V_at)$(am__mv) $(DEPDIR)/SLPServerNetworkTester-SLPServerTestHelper.Tpo $(DEPDIR)/SLPServerNetworkTester-SLPServerTestHelper.Po
#	$(AM_V_CXX)source='SLPServerTestHelper.cpp' object='SLPServerNetworkTester-SLPServerTestHelper.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPServerNetworkTester_CXXFLAGS) $(CXXFLAGS) -c -o SLPServerNetworkTester-SLPServerTestHelper.o `test -f 'SLPServerTestHelper.cpp' || echo '$(srcdir)/'`SLPServerTestHelper.cpp

SLPServerNetworkTester-SLPServerTestHelper.obj: SLPServerTestHelper.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPServerNetworkTester_CXXFLAGS) $(CXXFLAGS) -MT SLPServerNetworkTester-SLPServerTestHelper.obj -MD -MP -MF $(DEPDIR)/SLPServerNetworkTester-SLPServerTestHelper.Tpo -c -o SLPServerNetworkTester-SLPServerTestHelper.obj `if test -f 'SLPServerTestHelper.cpp'; then $(CYGPATH_W) 'SLPServerTestHelper.cpp'; else $(CYGPATH_W) '$(srcdir)/SLPServerTestHelper.cpp'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/SLPServerNetworkTester-SLPServerTestHelper.Tpo $(DEPDIR)/SLPServerNetworkTester-SLPServerTestHelper.Po
#	$(AM_V_CXX)source='SLPServerTestHelper.cpp' object='SLPServerNetworkTester-SLPServerTestHelper.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPServerNetworkTester_CXXFLAGS) $(CXXFLAGS) -c -o SLPServerNetworkTester-SLPServerTestHelper.obj `if test -f 'SLPServerTestHelper.cpp'; then $(CYGPATH_W) 'SLPServerTestHelper.cpp'; else $(CYGPATH_W) '$(srcdir)/SLPServerTestHelper.cpp'; fi`

SLPServerNetworkTester-SLPServerNetworkTest.o: SLPServerNetworkTest.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPServerNetworkTester_CXXFLAGS) $(CXXFLAGS) -MT SLPServerNetworkTester-SLPServerNetworkTest.o -MD -MP -MF $(DEPDIR)/SLPServerNetworkTester-SLPServerNetworkTest.Tpo -c -o SLPServerNetworkTester-SLPServerNetworkTest.o `test -f 'SLPServerNetworkTest.cpp' || echo '$(srcdir)/'`SLPServerNetworkTest.cpp
#	$(AM_V_at)$(am__mv) $(DEPDIR)/SLPServerNetworkTester-SLPServerNetworkTest.Tpo $(DEPDIR)/SLPServerNetworkTester-SLPServerNetworkTest.Po
#	$(AM_V_CXX)source='SLPServerNetworkTest.cpp' object='SLPServerNetworkTester-SLPServerNetworkTest.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPServerNetworkTester_CXXFLAGS) $(CXXFLAGS) -c -o SLPServerNetworkTester-SLPServerNetworkTest.o `test -f 'SLPServerNetworkTest.cpp' || echo '$(srcdir)/'`SLPServerNetworkTest.cpp

SLPServerNetworkTester-SLPServerNetworkTest.obj: SLPServerNetworkTest.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPServerNetworkTester_CXXFLAGS) $(CXXFLAGS) -MT SLPServerNetworkTester-SLPServerNetworkTest.obj -MD -MP -MF $(DEPDIR)/SLPServerNetworkTester-SLPServerNetworkTest.Tpo -c -o SLPServerNetworkTester-SLPServerNetworkTest.obj `if test -f 'SLPServerNetworkTest.cpp'; then $(CYGPATH_W) 'SLPServerNetworkTest.cpp'; else $(CYGPATH_W) '$(srcdir)/SLPServerNetworkTest.cpp'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/SLPServerNetworkTester-SLPServerNetworkTest.Tpo $(DEPDIR)/SLPServerNetworkTester-SLPServerNetworkTest.Po
#	$(AM_V_CXX)source='SLPServerNetworkTest.cpp' object='SLPServerNetworkTester-SLPServerNetworkTest.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPServerNetworkTester_CXXFLAGS) $(CXXFLAGS) -c -o SLPServerNetworkTester-SLPServerNetworkTest.obj `if test -f 'SLPServerNetworkTest.cpp'; then $(CYGPATH_W) 'SLPServerNetworkTest.cpp'; else $(CYGPATH_W) '$(srcdir)/SLPServerNetworkTest.cpp'; fi`

SLPServerSATester-SLPServerTestHelper.o: SLPServerTestHelper.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPServerSATester_CXXFLAGS) $(CXXFLAGS) -MT SLPServerSATester-SLPServerTestHelper.o -MD -MP -MF $(DEPDIR)/SLPServerSATester-SLPServerTestHelper.Tpo -c -o SLPServerSATester-SLPServerTestHelper.o `test -f 'SLPServerTestHelper.cpp' || echo '$(srcdir)/'`SLPServerTestHelper.cpp
#	$(AM_V_at)$(am__mv) $(DEPDIR)/SLPServerSATester-SLPServerTestHelper.Tpo $(DEPDIR)/SLPServerSATester-SLPServerTestHelper.Po
#	$(AM_V_CXX)source='SLPServerTestHelper.cpp' object='SLPServerSATester-SLPServerTestHelper.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPServerSATester_CXXFLAGS) $(CXXFLAGS) -c -o SLPServerSATester-SLPServerTestHelper.o `test -f 'SLPServerTestHelper.cpp' || echo '$(srcdir)/'`SLPServerTestHelper.cpp

SLPServerSATester-SLPServerTestHelper.obj: SLPServerTestHelper.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPServerSATester_CXXFLAGS) $(CXXFLAGS) -MT SLPServerSATester-SLPServerTestHelper.obj -MD -MP -MF $(DEPDIR)/SLPServerSATester-SLPServerTestHelper.Tpo -c -o SLPServerSATester-SLPServerTestHelper.obj `if test -f 'SLPServerTestHelper.cpp'; then $(CYGPATH_W) 'SLPServerTestHelper.cpp'; else $(CYGPATH_W) '$(srcdir)/SLPServerTestHelper.cpp'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/SLPServerSATester-SLPServerTestHelper.Tpo $(DEPDIR)/SLPServerSATester-SLPServerTestHelper.Po
#	$(AM_V_CXX)source='SLPServerTestHelper.cpp' object='SLPServerSATester-SLPServerTestHelper.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPServerSATester_CXXFLAGS) $(CXXFLAGS) -c -o SLPServerSATester-SLPServerTestHelper.obj `if test -f 'SLPServerTestHelper.cpp'; then $(CYGPATH_W) 'SLPServerTestHelper.cpp'; else $(CYGPATH_W) '$(srcdir)/SLPServerTestHelper.cpp'; fi`

SLPServerSATester-SLPServerSATest.o: SLPServerSATest.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPServerSATester_CXXFLAGS) $(CXXFLAGS) -MT SLPServerSATester-SLPServerSATest.o -MD -MP -MF $(DEPDIR)/SLPServerSATester-SLPServerSATest.Tpo -c -o SLPServerSATester-SLPServerSATest.o `test -f 'SLPServerSATest.cpp' || echo '$(srcdir)/'`SLPServerSATest.cpp
#	$(AM_V_at)$(am__mv) $(DEPDIR)/SLPServerSATester-SLPServerSATest.Tpo $(DEPDIR)/SLPServerSATester-SLPServerSATest.Po
#	$(AM_V_CXX)source='SLPServerSATest.cpp' object='SLPServerSATester-SLPServerSATest.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPServerSATester_CXXFLAGS) $(CXXFLAGS) -c -o SLPServerSATester-SLPServerSATest.o `test -f 'SLPServerSATest.cpp' || echo '$(srcdir)/'`SLPServerSATest.cpp

SLPServerSATester-SLPServerSATest.obj: SLPServerSATest.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPServerSATester_CXXFLAGS) $(CXXFLAGS) -MT SLPServerSATester-SLPServerSATest.obj -MD -MP -MF $(DEPDIR)/SLPServerSATester-SLPServerSATest.Tpo -c -o SLPServerSATester-SLPServerSATest.obj `if test -f 'SLPServerSATest.cpp'; then $(CYGPATH_W) 'SLPServerSATest.cpp'; else $(CYGPATH_W) '$(srcdir)/SLPServerSATest.cpp'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/SLPServerSATester-SLPServerSATest.Tpo $(DEPDIR)/SLPServerSATester-SLPServerSATest.Po
#	$(AM_V_CXX)source='SLPServerSATest.cpp' object='SLPServerSATester-SLPServerSATest.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPServerSATester_CXXFLAGS) $(CXXFLAGS) -c -o SLPServerSATester-SLPServerSATest.obj `if test -f 'SLPServerSATest.cpp'; then $(CYGPATH_W) 'SLPServerSATest.cpp'; else $(CYGPATH_W) '$(srcdir)/SLPServerSATest.cpp'; fi`

SLPServerUATester-SLPServerTestHelper.o: SLPServerTestHelper.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPServerUATester_CXXFLAGS) $(CXXFLAGS) -MT SLPServerUATester-SLPServerTestHelper.o -MD -MP -MF $(DEPDIR)/SLPServerUATester-SLPServerTestHelper.Tpo -c -o SLPServerUATester-SLPServerTestHelper.o `test -f 'SLPServerTestHelper.cpp' || echo '$(srcdir)/'`SLPServerTestHelper.cpp
#	$(AM_V_at)$(am__mv) $(DEPDIR)/SLPServerUATester-SLPServerTestHelper.Tpo $(DEPDIR)/SLPServerUATester-SLPServerTestHelper.Po
#	$(AM_V_CXX)source='SLPServerTestHelper.cpp' object='SLPServerUATester-SLPServerTestHelper.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPServerUATester_CXXFLAGS) $(CXXFLAGS) -c -o SLPServerUATester-SLPServerTestHelper.o `test -f 'SLPServerTestHelper.cpp' || echo '$(srcdir)/'`SLPServerTestHelper.cpp

SLPServerUATester-SLPServerTestHelper.obj: SLPServerTestHelper.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPServerUATester_CXXFLAGS) $(CXXFLAGS) -MT SLPServerUATester-SLPServerTestHelper.obj -MD -MP -MF $(DEPDIR)/SLPServerUATester-SLPServerTestHelper.Tpo -c -o SLPServerUATester-SLPServerTestHelper.obj `if test -f 'SLPServerTestHelper.cpp'; then $(CYGPATH_W) 'SLPServerTestHelper.cpp'; else $(CYGPATH_W) '$(srcdir)/SLPServerTestHelper.cpp'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/SLPServerUATester-SLPServerTestHelper.Tpo $(DEPDIR)/SLPServerUATester-SLPServerTestHelper.Po
#	$(AM_V_CXX)source='SLPServerTestHelper.cpp' object='SLPServerUATester-SLPServerTestHelper.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPServerUATester_CXXFLAGS) $(CXXFLAGS) -c -o SLPServerUATester-SLPServerTestHelper.obj `if test -f 'SLPServerTestHelper.cpp'; then $(CYGPATH_W) 'SLPServerTestHelper.cpp'; else $(CYGPATH_W) '$(srcdir)/SLPServerTestHelper.cpp'; fi`

SLPServerUATester-SLPServerUATest.o: SLPServerUATest.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPServerUATester_CXXFLAGS) $(CXXFLAGS) -MT SLPServerUATester-SLPServerUATest.o -MD -MP -MF $(DEPDIR)/SLPServerUATester-SLPServerUATest.Tpo -c -o SLPServerUATester-SLPServerUATest.o `test -f 'SLPServerUATest.cpp' || echo '$(srcdir)/'`SLPServerUATest.cpp
#	$(AM_V_at)$(am__mv) $(DEPDIR)/SLPServerUATester-SLPServerUATest.Tpo $(DEPDIR)/SLPServerUATester-SLPServerUATest.Po
#	$(AM_V_CXX)source='SLPServerUATest.cpp' object='SLPServerUATester-SLPServerUATest.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPServerUATester_CXXFLAGS) $(CXXFLAGS) -c -o SLPServerUATester-SLPServerUATest.o `test -f 'SLPServerUATest.cpp' || echo '$(srcdir)/'`SLPServerUATest.cpp

SLPServerUATester-SLPServerUATest.obj: SLPServerUATest.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPServerUATester_CXXFLAGS) $(CXXFLAGS) -MT SLPServerUATester-SLPServerUATest.obj -MD -MP -MF $(DEPDIR)/SLPServerUATester-SLPServerUATest.Tpo -c -o SLPServerUATester-SLPServerUATest.obj `if test -f 'SLPServerUATest.cpp'; then $(CYGPATH_W) 'SLPServerUATest.cpp'; else $(CYGPATH_W) '$(srcdir)/SLPServerUATest.cpp'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/SLPServerUATester-SLPServerUATest.Tpo $(DEPDIR)/SLPServerUATester-SLPServerUATest.Po
#	$(AM_V_CXX)source='SLPServerUATest.cpp' object='SLPServerUATester-SLPServerUATest.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPServerUATester_CXXFLAGS) $(CXXFLAGS) -c -o SLPServerUATester-SLPServerUATest.obj `if test -f 'SLPServerUATest.cpp'; then $(CYGPATH_W) 'SLPServerUATest.cpp'; else $(CYGPATH_W) '$(srcdir)/SLPServerUATest.cpp'; fi`

SLPStoreTester-SLPStoreTest.o: SLPStoreTest.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPStoreTester_CXXFLAGS) $(CXXFLAGS) -MT SLPStoreTester-SLPStoreTest.o -MD -MP -MF $(DEPDIR)/SLPStoreTester-SLPStoreTest.Tpo -c -o SLPStoreTester-SLPStoreTest.o `test -f 'SLPStoreTest.cpp' || echo '$(srcdir)/'`SLPStoreTest.cpp
#	$(AM_V_at)$(am__mv) $(DEPDIR)/SLPStoreTester-SLPStoreTest.Tpo $(DEPDIR)/SLPStoreTester-SLPStoreTest.Po
#	$(AM_V_CXX)source='SLPStoreTest.cpp' object='SLPStoreTester-SLPStoreTest.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPStoreTester_CXXFLAGS) $(CXXFLAGS) -c -o SLPStoreTester-SLPStoreTest.o `test -f 'SLPStoreTest.cpp' || echo '$(srcdir)/'`SLPStoreTest.cpp

SLPStoreTester-SLPStoreTest.obj: SLPStoreTest.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPStoreTester_CXXFLAGS) $(CXXFLAGS) -MT SLPStoreTester-SLPStoreTest.obj -MD -MP -MF $(DEPDIR)/SLPStoreTester-SLPStoreTest.Tpo -c -o SLPStoreTester-SLPStoreTest.obj `if test -f 'SLPStoreTest.cpp'; then $(CYGPATH_W) 'SLPStoreTest.cpp'; else $(CYGPATH_W) '$(srcdir)/SLPStoreTest.cpp'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/SLPStoreTester-SLPStoreTest.Tpo $(DEPDIR)/SLPStoreTester-SLPStoreTest.Po
#	$(AM_V_CXX)source='SLPStoreTest.cpp' object='SLPStoreTester-SLPStoreTest.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPStoreTester_CXXFLAGS) $(CXXFLAGS) -c -o SLPStoreTester-SLPStoreTest.obj `if test -f 'SLPStoreTest.cpp'; then $(CYGPATH_W) 'SLPStoreTest.cpp'; else $(CYGPATH_W) '$(srcdir)/SLPStoreTest.cpp'; fi`

SLPStringsTester-SLPStringsTest.o: SLPStringsTest.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPStringsTester_CXXFLAGS) $(CXXFLAGS) -MT SLPStringsTester-SLPStringsTest.o -MD -MP -MF $(DEPDIR)/SLPStringsTester-SLPStringsTest.Tpo -c -o SLPStringsTester-SLPStringsTest.o `test -f 'SLPStringsTest.cpp' || echo '$(srcdir)/'`SLPStringsTest.cpp
#	$(AM_V_at)$(am__mv) $(DEPDIR)/SLPStringsTester-SLPStringsTest.Tpo $(DEPDIR)/SLPStringsTester-SLPStringsTest.Po
#	$(AM_V_CXX)source='SLPStringsTest.cpp' object='SLPStringsTester-SLPStringsTest.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPStringsTester_CXXFLAGS) $(CXXFLAGS) -c -o SLPStringsTester-SLPStringsTest.o `test -f 'SLPStringsTest.cpp' || echo '$(srcdir)/'`SLPStringsTest.cpp

SLPStringsTester-SLPStringsTest.obj: SLPStringsTest.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPStringsTester_CXXFLAGS) $(CXXFLAGS) -MT SLPStringsTester-SLPStringsTest.obj -MD -MP -MF $(DEPDIR)/SLPStringsTester-SLPStringsTest.Tpo -c -o SLPStringsTester-SLPStringsTest.obj `if test -f 'SLPStringsTest.cpp'; then $(CYGPATH_W) 'SLPStringsTest.cpp'; else $(CYGPATH_W) '$(srcdir)/SLPStringsTest.cpp'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/SLPStringsTester-SLPStringsTest.Tpo $(DEPDIR)/SLPStringsTester-SLPStringsTest.Po
#	$(AM_V_CXX)source='SLPStringsTest.cpp' object='SLPStringsTester-SLPStringsTest.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SLPStringsTester_CXXFLAGS) $(CXXFLAGS) -c -o SLPStringsTester-SLPStringsTest.obj `if test -f 'SLPStringsTest.cpp'; then $(CYGPATH_W) 'SLPStringsTest.cpp'; else $(CYGPATH_W) '$(srcdir)/SLPStringsTest.cpp'; fi`

ScopeSetTester-ScopeSetTest.o: ScopeSetTest.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ScopeSetTester_CXXFLAGS) $(CXXFLAGS) -MT ScopeSetTester-ScopeSetTest.o -MD -MP -MF $(DEPDIR)/ScopeSetTester-ScopeSetTest.Tpo -c -o ScopeSetTester-ScopeSetTest.o `test -f 'ScopeSetTest.cpp' || echo '$(srcdir)/'`ScopeSetTest.cpp
#	$(AM_V_at)$(am__mv) $(DEPDIR)/ScopeSetTester-ScopeSetTest.Tpo $(DEPDIR)/ScopeSetTester-ScopeSetTest.Po
#	$(AM_V_CXX)source='ScopeSetTest.cpp' object='ScopeSetTester-ScopeSetTest.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ScopeSetTester_CXXFLAGS) $(CXXFLAGS) -c -o ScopeSetTester-ScopeSetTest.o `test -f 'ScopeSetTest.cpp' || echo '$(srcdir)/'`ScopeSetTest.cpp

ScopeSetTester-ScopeSetTest.obj: ScopeSetTest.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ScopeSetTester_CXXFLAGS) $(CXXFLAGS) -MT ScopeSetTester-ScopeSetTest.obj -MD -MP -MF $(DEPDIR)/ScopeSetTester-ScopeSetTest.Tpo -c -o ScopeSetTester-ScopeSetTest.obj `if test -f 'ScopeSetTest.cpp'; then $(CYGPATH_W) 'ScopeSetTest.cpp'; else $(CYGPATH_W) '$(srcdir)/ScopeSetTest.cpp'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/ScopeSetTester-ScopeSetTest.Tpo $(DEPDIR)/ScopeSetTester-ScopeSetTest.Po
#	$(AM_V_CXX)source='ScopeSetTest.cpp' object='ScopeSetTester-ScopeSetTest.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ScopeSetTester_CXXFLAGS) $(CXXFLAGS) -c -o ScopeSetTester-ScopeSetTest.obj `if test -f 'ScopeSetTest.cpp'; then $(CYGPATH_W) 'ScopeSetTest.cpp'; else $(CYGPATH_W) '$(srcdir)/ScopeSetTest.cpp'; fi`

ServiceEntryTester-ServiceEntryTest.o: ServiceEntryTest.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ServiceEntryTester_CXXFLAGS) $(CXXFLAGS) -MT ServiceEntryTester-ServiceEntryTest.o -MD -MP -MF $(DEPDIR)/ServiceEntryTester-ServiceEntryTest.Tpo -c -o ServiceEntryTester-ServiceEntryTest.o `test -f 'ServiceEntryTest.cpp' || echo '$(srcdir)/'`ServiceEntryTest.cpp
#	$(AM_V_at)$(am__mv) $(DEPDIR)/ServiceEntryTester-ServiceEntryTest.Tpo $(DEPDIR)/ServiceEntryTester-ServiceEntryTest.Po
#	$(AM_V_CXX)source='ServiceEntryTest.cpp' object='ServiceEntryTester-ServiceEntryTest.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ServiceEntryTester_CXXFLAGS) $(CXXFLAGS) -c -o ServiceEntryTester-ServiceEntryTest.o `test -f 'ServiceEntryTest.cpp' || echo '$(srcdir)/'`ServiceEntryTest.cpp

ServiceEntryTester-ServiceEntryTest.obj: ServiceEntryTest.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ServiceEntryTester_CXXFLAGS) $(CXXFLAGS) -MT ServiceEntryTester-ServiceEntryTest.obj -MD -MP -MF $(DEPDIR)/ServiceEntryTester-ServiceEntryTest.Tpo -c -o ServiceEntryTester-ServiceEntryTest.obj `if test -f 'ServiceEntryTest.cpp'; then $(CYGPATH_W) 'ServiceEntryTest.cpp'; else $(CYGPATH_W) '$(srcdir)/ServiceEntryTest.cpp'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/ServiceEntryTester-ServiceEntryTest.Tpo $(DEPDIR)/ServiceEntryTester-ServiceEntryTest.Po
#	$(AM_V_CXX)source='ServiceEntryTest.cpp' object='ServiceEntryTester-ServiceEntryTest.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ServiceEntryTester_CXXFLAGS) $(CXXFLAGS) -c -o ServiceEntryTester-ServiceEntryTest.obj `if test -f 'ServiceEntryTest.cpp'; then $(CYGPATH_W) 'ServiceEntryTest.cpp'; else $(CYGPATH_W) '$(srcdir)/ServiceEntryTest.cpp'; fi`

ServiceEntryTester-URLEntryTest.o: URLEntryTest.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ServiceEntryTester_CXXFLAGS) $(CXXFLAGS) -MT ServiceEntryTester-URLEntryTest.o -MD -MP -MF $(DEPDIR)/ServiceEntryTester-URLEntryTest.Tpo -c -o ServiceEntryTester-URLEntryTest.o `test -f 'URLEntryTest.cpp' || echo '$(srcdir)/'`URLEntryTest.cpp
#	$(AM_V_at)$(am__mv) $(DEPDIR)/ServiceEntryTester-URLEntryTest.Tpo $(DEPDIR)/ServiceEntryTester-URLEntryTest.Po
#	$(AM_V_CXX)source='URLEntryTest.cpp' object='ServiceEntryTester-URLEntryTest.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ServiceEntryTester_CXXFLAGS) $(CXXFLAGS) -c -o ServiceEntryTester-URLEntryTest.o `test -f 'URLEntryTest.cpp' || echo '$(srcdir)/'`URLEntryTest.cpp

ServiceEntryTester-URLEntryTest.obj: URLEntryTest.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ServiceEntryTester_CXXFLAGS) $(CXXFLAGS) -MT ServiceEntryTester-URLEntryTest.obj -MD -MP -MF $(DEPDIR)/ServiceEntryTester-URLEntryTest.Tpo -c -o ServiceEntryTester-URLEntryTest.obj `if test -f 'URLEntryTest.cpp'; then $(CYGPATH_W) 'URLEntryTest.cpp'; else $(CYGPATH_W) '$(srcdir)/URLEntryTest.cpp'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/ServiceEntryTester-URLEntryTest.Tpo $(DEPDIR)/ServiceEntryTester-URLEntryTest.Po
#	$(AM_V_CXX)source='URLEntryTest.cpp' object='ServiceEntryTester-URLEntryTest.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ServiceEntryTester_CXXFLAGS) $(CXXFLAGS) -c -o ServiceEntryTester-URLEntryTest.obj `if test -f 'URLEntryTest.cpp'; then $(CYGPATH_W) 'URLEntryTest.cpp'; else $(CYGPATH_W) '$(srcdir)/URLEntryTest.cpp'; fi`

XIDAllocatorTester-XIDAllocatorTest.o: XIDAllocatorTest.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(XIDAllocatorTester_CXXFLAGS) $(CXXFLAGS) -MT XIDAllocatorTester-XIDAllocatorTest.o -MD -MP -MF $(DEPDIR)/XIDAllocatorTester-XIDAllocatorTest.Tpo -c -o XIDAllocatorTester-XIDAllocatorTest.o `test -f 'XIDAllocatorTest.cpp' || echo '$(srcdir)/'`XIDAllocatorTest.cpp
#	$(AM_V_at)$(am__mv) $(DEPDIR)/XIDAllocatorTester-XIDAllocatorTest.Tpo $(DEPDIR)/XIDAllocatorTester-XIDAllocatorTest.Po
#	$(AM_V_CXX)source='XIDAllocatorTest.cpp' object='XIDAllocatorTester-XIDAllocatorTest.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(XIDAllocatorTester_CXXFLAGS) $(CXXFLAGS) -c -o XIDAllocatorTester-XIDAllocatorTest.o `test -f 'XIDAllocatorTest.cpp' || echo '$(srcdir)/'`XIDAllocatorTest.cpp

XIDAllocatorTester-XIDAllocatorTest.obj: XIDAllocatorTest.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(XIDAllocatorTester_CXXFLAGS) $(CXXFLAGS) -MT XIDAllocatorTester-XIDAllocatorTest.obj -MD -MP -MF $(DEPDIR)/XIDAllocatorTester-XIDAllocatorTest.Tpo -c -o XIDAllocatorTester-XIDAllocatorTest.obj `if test -f 'XIDAllocatorTest.cpp'; then $(CYGPATH_W) 'XIDAllocatorTest.cpp'; else $(CYGPATH_W) '$(srcdir)/XIDAllocatorTest.cpp'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/XIDAllocatorTester-XIDAllocatorTest.Tpo $(DEPDIR)/XIDAllocatorTester-XIDAllocatorTest.Po
#	$(AM_V_CXX)source='XIDAllocatorTest.cpp' object='XIDAllocatorTester-XIDAllocatorTest.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(XIDAllocatorTester_CXXFLAGS) $(CXXFLAGS) -c -o XIDAllocatorTester-XIDAllocatorTest.obj `if test -f 'XIDAllocatorTest.cpp'; then $(CYGPATH_W) 'XIDAllocatorTest.cpp'; else $(CYGPATH_W) '$(srcdir)/XIDAllocatorTest.cpp'; fi`

.cpp.o:
#	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
#	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
#	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgconfigdir)" || exit $$?; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgconfigdir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst $(AM_TESTS_FD_REDIRECT); then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    col="$$grn"; \
	  else \
	    col="$$red"; \
	  fi; \
	  echo "$${col}$$dashes$${std}"; \
	  echo "$${col}$$banner$${std}"; \
	  test -z "$$skipped" || echo "$${col}$$skipped$${std}"; \
	  test -z "$$report" || echo "$${col}$$report$${std}"; \
	  echo "$${col}$$dashes$${std}"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(DATA) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgconfigdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-noinstLTLIBRARIES clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-pkgconfigDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES uninstall-pkgconfigDATA

.MAKE: all check check-am install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-noinstLTLIBRARIES clean-noinstPROGRAMS \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-man install-pdf install-pdf-am install-pkgconfigDATA \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-libLTLIBRARIES \
	uninstall-pkgconfigDATA


SLP.pb.cc SLP.pb.h: Makefile.am SLP.proto
	$(PROTOC) --cpp_out ./ --proto_path $(srcdir) $(srcdir)/SLP.proto

SLPService.pb.cpp SLPService.pb.h: Makefile.am SLP.proto
	$(OLA_PROTOC)  --cppservice_out ./ --proto_path $(srcdir) $(srcdir)/SLP.proto

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
