#! /bin/sh /usr/share/dpatch/dpatch-run

## 07_not_as_root.dpatch by Thomas Schmidt <tschmidt@debian.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Refuse to run vdr as user root, except when using the 
## DP: --allow-root option

@DPATCH@
diff -urNad vdr-1.3.23/vdr.c /tmp/dpep.ML49nd/vdr-1.3.23/vdr.c
--- vdr-1.3.23/vdr.c	2005-04-10 18:44:25.000000000 +0200
+++ /tmp/dpep.ML49nd/vdr-1.3.23/vdr.c	2005-04-10 18:45:27.000000000 +0200
@@ -35,6 +35,7 @@
 #include <grp.h>
 #include <sys/capability.h>
 #include <sys/prctl.h>
+#include <sys/types.h>
 #include "audio.h"
 #include "channels.h"
 #include "config.h"
@@ -231,9 +232,11 @@
   cPluginManager PluginManager(DEFAULTPLUGINDIR);
   const char* username = NULL;
   const char* groupname = NULL;
+  bool IsAllowRootAnyway = false;
   int ExitCode = 0;
 
   static struct option long_options[] = {
+      { "allow-root",no_argument,      NULL, '!' },
       { "audio",    required_argument, NULL, 'a' },
       { "config",   required_argument, NULL, 'c' },
       { "daemon",   no_argument,       NULL, 'd' },
@@ -351,16 +354,36 @@
                     break;
           case 'g': groupname = optarg;
                     break;
+          case '!': IsAllowRootAnyway = true;
+                    break;
           default:  return 2;
           }
         }
 
+  // Check if the program should run as root
+  bool IsRoot=0; 
+  
+  if (username == NULL && groupname == NULL) 
+     IsRoot = !getuid () || !getgid () || !geteuid () || !getegid ();
+  else {
+     if (username != NULL) { 
+     	if (strcmp(username,"root") == 0)
+   		IsRoot = 1;
+     }
+     if (groupname != NULL) {
+     	if (strcmp(groupname,"root") == 0) 
+		IsRoot = 1;
+     }
+  }
+  
   // Help and version info:
 
   if (DisplayHelp || DisplayVersion) {
-     if (!PluginManager.HasPlugins())
-        PluginManager.AddPlugin("*"); // adds all available plugins
-     PluginManager.LoadPlugins();
+     if (!IsRoot || IsAllowRootAnyway) {
+     	if (!PluginManager.HasPlugins())
+        	PluginManager.AddPlugin("*"); // adds all available plugins
+     	PluginManager.LoadPlugins();
+     }
      if (DisplayHelp) {
         printf("Usage: vdr [OPTIONS]\n\n"          // for easier orientation, this is column 80|
                "  -a CMD,   --audio=CMD    send Dolby Digital audio to stdin of command CMD\n"
@@ -405,7 +428,7 @@
         }
      if (DisplayVersion)
         printf("vdr (%s) - The Video Disk Recorder\n", VDRVERSION);
-     if (PluginManager.HasPlugins()) {
+     if ((!IsRoot || IsAllowRootAnyway) && PluginManager.HasPlugins()) {
         if (DisplayHelp)
            printf("Plugins: vdr -P\"name [OPTIONS]\"\n\n");
         for (int i = 0; ; i++) {
@@ -425,9 +448,20 @@
      return 0;
      }
 
+  if (IsRoot) {
+        if (IsAllowRootAnyway) {
+            char* rootWarning="Warning! VDR started with root privileges";
+            isyslog(rootWarning);
+            fprintf(stderr, "%s\n", rootWarning);
+        } else {
+            fprintf (stderr, "%s: sorry, I refuse to run with root privileges\n", argv[0]);
+     	    return 0;
+        }
+  }
+  
   // Only try to change capabilities/user when vdr is called by 
   // root
-  if (!getuid () || !getgid () || !geteuid () || !getegid ()) {
+  if (!IsAllowRootAnyway && (!getuid () || !getgid () || !geteuid () || !getegid ())) {
      	if(username && set_keepcaps() != 0)
     		return 2;
 
