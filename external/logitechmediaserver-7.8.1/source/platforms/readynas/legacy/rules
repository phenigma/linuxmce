#!/usr/bin/make -f

# $Id$

# Uncomment this to turn on verbose mode.
export DH_VERBOSE=1

package=squeezeboxserver
base=$(CURDIR)/readynas/$(package)
share=usr/share/squeezeboxserver/
source=$(CURDIR)/../server

varlib=c/.squeezeboxserver

clean:
	dh_testdir
	dh_testroot
	rm -rf ${base}

install:
	dh_testdir
	dh_testroot
	dh_installdirs

	# Create directories needed.
	install -d -m0755 ${base}/etc/default/
	install -d -m0755 ${base}/etc/init.d/
	install -d -m0755 ${base}/etc/squeezeboxserver/
	install -d -m0755 ${base}/usr/share/perl5/
	install -d -m0755 ${base}/${share}
	install -d -m0755 ${base}/usr/share/doc/squeezeboxserver/
	install -d -m0755 ${base}/${varlib}/prefs
	install -d -m0755 ${base}/${varlib}/cache
	install -d -m0755 ${base}/${varlib}/log

	## This only occurs if the files exist ... if they do not exist here, they were probably
	## removed by the buildme.pl script on purpose.
	# This contains attributes.pm which Netgear doesn't ship
	cp -rf $(CURDIR)/readynas/CPAN ${source}/

	# Copy our server files to the appropriate Debian locations.
	install -m0755 ${source}/slimserver.pl ${base}/usr/sbin/squeezeboxserver
	install -m0755 ${source}/scanner.pl ${base}/usr/sbin/squeezeboxserver-scanner

	# We need to copy the Slim directory over...
	cp -rf ${source}/Slim ${base}/usr/share/perl5

	# Copy our CPAN directory and locally modified perl modules
	cp -rf ${source}/CPAN ${base}/${share}
	cp -rf ${source}/lib ${base}/${share}
	
	# Remove non-Linux binary modules
	rm -rf ${base}/${share}/CPAN/arch/5.8/darwin-thread-multi-2level
	rm -rf ${base}/${share}/CPAN/arch/5.10/darwin-thread-multi-2level
	rm -rf ${base}/${share}/CPAN/arch/5.10/MSWin32-x86-multi-thread
	rm -rf ${source}/Bin/darwin
	rm -rf ${source}/Bin/MSWin32-x86-multi-thread
	rm -rf ${source}/Bin/powerpc-hardhat-linux

	# remove win32 only plugin
	rm -rf ${source}/Slim/Plugin/PreventStandby

	# let's use the system's mysql server
	rm -rf ${source}/Bin/i386-linux/mysqld

	# And aux files needed to run Logitech Media Server
	cp -rf ${source}/Firmware ${base}/${share}
	cp -rf ${source}/Graphics ${base}/${share}
	cp -rf ${source}/HTML ${base}/${share}
	cp -rf ${source}/IR ${base}/${share}
	cp -rf ${source}/SQL ${base}/${share}
	cp -rf ${source}/strings.txt ${base}/${share}
	cp -rf ${source}/MySQL ${base}/${share}
	cp -rf ${source}/icudt46*.dat ${base}/${share}

	# Make sure we copy in the Bin directory
	cp -rf ${source}/Bin ${base}/${share}

	# We put the Plugins into /c/ because they are modifiable, 
	# and shouldn't be put into /usr. 
	cp -rf ${source}/Plugins ${base}/${varlib} || mkdir ${base}/${varlib}/Plugins
	ln -s /${varlib}/Plugins ${base}/${share}/Plugins

	# Remove errmsg.sys files from the MySQL dir, since they may not match
	# up with the installed version's
	rm ${base}/${share}/MySQL/errmsg.*

	# Set up the pref's file locations...
	cp -rf ${source}/*.conf ${base}/etc/squeezeboxserver

	## Overwrite some default settings with ReadyNas specific settings
	cp -rf ${CURDIR}/readynas/custom-convert.conf ${base}/etc/squeezeboxserver

	# Copy over the server init script...
	cp -rf $(CURDIR)/readynas/squeezeboxserver.default ${base}/etc/default/squeezeboxserver
	cp -rf $(CURDIR)/readynas/squeezeboxserver.init ${base}/etc/init.d/squeezeboxserver

	# Wrapper to keep Logitech Media Server alive.
	cp -rf $(CURDIR)/readynas/squeezeboxserver_safe ${base}/usr/sbin/

	# Documentation
	cp -rf ${source}/Change* ${base}/usr/share/doc/squeezeboxserver/
	cp -rf ${source}/Installation.txt ${base}/usr/share/doc/squeezeboxserver/
	cp -rf ${source}/License.txt $(CURDIR)/readynas/copyright

	# Copy the revision file
	cp -rf ${source}/revision.txt ${base}/${share}


binary-indep: install
	dh_testdir
	dh_testroot
	dh_installchangelogs 
	dh_installdocs
	dh_install
	dh_installlogrotate
	# Bug 14551: don't provide rc.d init scripts in the ReadyNAS' debian
	# archive for squeezeboxserver, since the service is already managed
	# by Frontview's plugins mechanism. 
	#dh_installinit
	dh_installman
	dh_compress
	dh_fixperms
	dh_installdeb
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep
.PHONY: build clean binary-indep binary install configure
