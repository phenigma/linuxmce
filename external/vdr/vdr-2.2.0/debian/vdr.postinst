#! /bin/sh
# postinst script for vdr
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#
# quoting from the policy:
#     Any necessary prompting should almost always be confined to the
#     post-installation script, and should be protected with a conditional
#     so that unnecessary prompting doesn't happen if a package's
#     installation fails and the `postinst' is called with `abort-upgrade',
#     `abort-remove' or `abort-deconfigure'.


case "$1" in
    configure)

        # install/move channels.conf 
        if [ ! -e /var/lib/vdr/channels.conf ]; then
                cp /usr/share/doc/vdr/examples/channels.conf* /var/lib/vdr/
                gunzip /var/lib/vdr/channels.conf*.gz
        fi

        [ ! -d /var/lib/video.00 ] && mkdir /var/lib/video.00
        [ ! -d /srv/vdr/video.00 ] && mkdir -p /srv/vdr/video.00

        # ensure that user and group 'vdr' exist
        USER=vdr
        GROUP=vdr
        if ! getent group | grep -q "^$GROUP:" ; then
                echo -n "Adding group $GROUP.."
                addgroup --quiet --gid 666 --system $GROUP
                echo "..done"
        fi
        if ! getent passwd | grep -q "^$USER:"; then
                echo -n "Adding user $USER.."
                adduser --system --uid 666 --home /var/lib/vdr --shell /bin/false \
                        --gecos "VDR user" --no-create-home \
                        --disabled-login --disabled-password \
                        --ingroup $GROUP \
                        $USER
                echo "...done"
        fi

        # put vdr in group video so that it can access the DVB device nodes
        adduser $USER video > /dev/null || true

        # ensure that vdr's config and recording files are correctly owned
        [ -e /var/lib/video ] && chown -R $USER:$GROUP /var/lib/video/
        [ -e /var/lib/video.00 ] && chown -R $USER:$GROUP /var/lib/video.00/
        if [ -e /srv/vdr/video.00 ] ; then
            chown -R $USER:$GROUP /srv/vdr/video.00/ > /dev/null 2>&1 || true
        fi
        if [ -e /var/lib/vdr ] ; then 
            chown $USER:$GROUP /var/lib/vdr
            chown $USER:$GROUP /var/lib/vdr/* > /dev/null 2>&1 || true
        fi
        if [ -e /var/cache/vdr ] ; then
            chown $USER:$GROUP /var/cache/vdr
            chown $USER:$GROUP /var/cache/vdr/* > /dev/null 2>&1|| true
        fi
        
        # set execution bit for /etc/vdr/recording-hooks/R90.custom
        chmod +x /etc/vdr/recording-hooks/R90.custom  > /dev/null 2>&1 || true

        # make /usr/lib/vdr/vdr-shutdown.wrapper setuid/setgid
        # (owner root:vdr, mode 6750)
        if [ -e /usr/lib/vdr/vdr-shutdown.wrapper ] ; then
            chown root:$GROUP /usr/lib/vdr/vdr-shutdown.wrapper && \
            chmod 6750 /usr/lib/vdr/vdr-shutdown.wrapper
        fi

        # Dropped alternatives from old package version
        # (This can be dropped at squeeze +2)
        #update-alternatives --remove vdr /usr/bin/vdr-daemon
        #update-alternatives --remove vdr /usr/bin/vdr-kbd
        #update-alternatives --remove vdr /usr/bin/vdr-lirc
        #update-alternatives --remove vdr /usr/bin/vdr-rcu
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
