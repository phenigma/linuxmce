   http://www.bootsplash.org/

   Configuration Files

   Information is given about all versions of the bootsplash but only
   version 3 should be used. Version 3 includes all options
   from Version 2, as well as adding several new ones. A standard theme
   usually contains more than one configuration file. In addition to a
   configuration file for every resolution (as well as jpg's for every
   resolution), the animations (if used) are controlled by a seperate
   configuration file.

    1. Options, listed by version
    2. List of all options
    3. Information on drawing boxes
    4. Animation configuration file


   1. Options, listed by version

   Version 1
   NOTE: The placement and size values in all version 1 config files are
   given in multiples of 8 (x and width values), or 16 (y and height
   values)

   Available options:
   tx, ty, tw, th

   Version 2
   NOTE: Version 2 of the bootsplash config file format has many more
   options. Additionaly the text window is mdefined in pixels now instead
   of characters!

   Available options:
   version, state, jpeg, fgcolor, bgcolor, tx, ty, tw, th

   Version 3
   NOTE: Version 3 is the first version supporting textless boot and a
   freely defineable set of boxes (i.e. for progress bars, text windows
   etc). To make the whole theme look nicer you can use different
   pictures for silent and verbose mode.

   Available options:
   version, state, jpeg, silentjpeg, fgcolor, bgcolor, tx, ty, tw, th,
   text_x, text_y, text_size, text_color, box, overpaintok,
   progress_enable, percent


   2. List of all Options

   Option name: version

   Possible values: 2, or 3
   This describes the bootslash-version.
   Version 2 and up

   Option name: state

   Possible values: 0 or 1 (no or yes)
   This turns the graphical bootplash on and off
   Version 2 and up

   Option name: jpeg

   Possible values: full path to jpeg file
   The background to be used for verbose mode
   Version 2 and up

   Option name: silentjpeg

   Possible values: full path to jpeg file
   The background to be used for silent mode
   Version 3

   Option name: fgcolor

   Possible values: 0-8
   ( 0=black, 1=red, 2=green, 3=yellow, 4=blue, 5=magenta, 6=cyan,
   7=grey, 8=white)
   This sets the boot message text foreground color
   Version 2 and up

   Option name: bgcolor

   Possible values: 0-8
   ( 0=black, 1=red, 2=green, 3=yellow, 4=blue, 5=magenta, 6=cyan,
   7=grey, 8=white)
   This sets the boot message text background color (i.e. transparent
   color)
   Versions 2 and up

   Option name: tx

   Possible values: number (version 1: defined in the number 8x16
   character blocks)
   The x coordinate of the top left corner of the text window. (0,0 is
   top left corner of screen)
   All versions

   Option name: ty

   Possible values: number (version 1: defined in the number 8x16
   character blocks)
   The y coordinate of the top left corner of the text window. (0,0 is
   top left corner of screen)
   All versions

   Option name: tw

   Possible values: number (version 1: defined in the number 8x16
   character blocks)
   The width of the text window in pixels
   All versions

   Option name: th

   Possible values: number (version 1: defined in the number 8x16
   character blocks)
   The height of the text window in pixels
   Versions 1 and up

   Option name: text_x

   Possible values: number
   The x coordinate of the top-left corner of the truetype text message
   (0,0 is top left corner of screen)
   Versions 3 and up

   Option name: text_y

   Possible values: number
   The y coordinate of the top-left corner of the truetype text message
   (0,0 is top left corner of screen)
   Versions 3 and up

   Option name: text_size

   Possible values: number
   The point size of the truetype text message to displayed
   Versions 3 and up

   Option name: text_color

   Possible values: hex color-value
   The color of the truetype text message to be displayed
   Versions 3 and up

   Option name: box

   Possible values: silent, noover, inter, x1, x2, y1, y2, color1+alpha,
   color2+alpha, color3+alpha, color4+alpha
   Draws a box on top of a background. Colors may be either #rrggbb or
   #rrggbbaa, aa = alpha
   where alpha = 00 is translucent, 255 is solid.
   Versions 3 and up

   Option name: overpaintok

   Possible values: 0 or 1 (no or yes)
   Refreshes only the boxes (instead of the whole screen). This is a
   performace enhancement.
   Versions 3 and up

   Option name: progress_enable

   Possible values: 0 or 1 (no or yes)
   This turns the progress bar on/off.
   Versions 3 and up

   Option name: percent

   Possible values: 0-65535
   Start value for progress bar interpolation, Default 0
   Versions 3 and up


   3. Information on drawing boxes

   The box option can occur repeatedly, according to the number of boxes
   you want to paint:

   Paints a box from (x1, y1) to (x2, y2):

   box [flags] x1 y1 x2 y2 #color

   All colors may be either #rrggbb or #rrggbbaa, aa = alpha where alpha
   = 00 is translucent, 255 is solid.

   Paints a box from (x1, y1) to (x2, y2), in which the colors are
   interpolated between the corners - this makes a gradient-fill (ul =
   upper left corner, etc):

   box [flags] x1 y1 x2 y2 #color ul #color ur #color ll #color lr

   Possible Flags:

   'silent': box is shown on the silent screen given by "silentjpeg"
   instead of the verbose screen given by "jpeg"

   'noover': box will not be repainted every refresh. This is usefull
   when drawing a box with alpha transparency that will contain another
   element that will be repainted more than once...a progress bar, for
   instance. This only makes sense when the overpaintok option is set to
   1.

   'inter': box will be interpolated with the following box, depending on
   the current value of the "percent" variable. This box is the beginning
   state of the progress bar. The next box is the finished state of the
   progress bar. The progress bar function then interpolates all states
   in between.

   Note: Check one of the SuSE 8.2 config files to see how to define the
   progress bar!


   4. Animation configuration file

   Configuration of the animations is a bit more complicated. The config
   file (animations.cfg) has entries like this:

   [ .. ]
   fsck start:bootanim start fsck.mng
   fsck stop:bootanim stop
   [ .. ]

   Basically, it's a list of bootup hooks that are associated with a
   command to be executed when a certain service is started/stopped
   during boot/shutdown. There is a wrapper script called bootanim, which
   starts/stops animations played with fbmngplay. It looks for these
   animations in /etc/bootsplash/themes/current/animations/ per default.

   The syntax is this:
   [service] [start|stop]:[command-to-execute]

   "Service" is almost always the name of an executed init script. There
   are some additional hooks for finetuning. See the SuSE-8.1 theme's config
   file "animations.cfg".

   So, if you have an animation you want to play when apache is started,
   you would write:

   apache start:bootanim start animation.mng &

   To fade out an animation, run 'bootanim stop'.

   Bootanim can also play multiple animations in a row, each synchronized
   to a certain point in bootup. This can be used to keep the last
   picture of an animation visible after playing the animation. To
   achieve this, use 'bootanim start' with option -m and multiple mng
   files. To move on to the next animation, use 'bootanim next' later on.

   Before playing the next animation (esp. at the same position as
   before), you need to find a hook that can properly stop the boot
   animation (esp. when playing looped animations). It's also advised to
   have an entry in your config file that stops running animations as
   soon as the final system runlevel is reached:

   master:bootanim stop



