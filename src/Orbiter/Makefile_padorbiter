#<-dceag-mh-b->
GENDEV=../Gen_Devices

SNR_CPPFLAGS ?= -DKDE_LMCE -DPADORBITER -DUSE_GTK
SNR_LDFLAGS ?= 

ROOT = ..
CXX = g++
CXXFLAGS = -Wall -fPIC
CPPFLAGS = -I$(ROOT) -I$(ROOT)/DCE $(SNR_CPPFLAGS)
LDFLAGS = $(SNR_LDFLAGS) -L$(ROOT)/lib
BASELDLIBS = -lSerializeClass -lDCECommon -lPlutoUtils -lpthread

MYNAME = Orbiter
VERSION = 2.0.0
MYDEVTEMPLATEID = 8mplateID

Gen_Dev_Files = $(GENDEV)/OrbiterBase.cpp
sources = Main.cpp Orbiter.cpp $(Gen_Dev_Files)
#<-dceag-mh-e->

#Note: For Nokia 770, do an export SNR_CPPFLAGS="-DMAEMO_NOKIA770" before doing a make clean; make bin


CXXFLAGS += -O3
CPPFLAGS += -I/usr/include/SDL -DORBITER -DCACHE_IMAGES -I$(ROOT)/Splitter -I$(ROOT)/OrbiterGen -I$(ROOT)/SDL_Helpers
LDFLAGS += -L/usr/X11R6/lib
XTRALDLIBS += -lDCECommon -lSDL -lSDL_ttf -lSDL_image -lSGE -lSDL_gfx -lXtst -lXext -lXrender -lSDL_Helpers 

# USE_GTK can be passed in as additional defines to SNR_CPPFLAGS to add support for GTK progress bars and prom
# pt dialogues.
ifeq (USE_GTK,$(findstring USE_GTK, $(SNR_CPPFLAGS)))
CPPFLAGS += `pkg-config --cflags gtk+-x11-2.0`
LDFLAGS += `pkg-config --libs gtk+-x11-2.0`
sources += Linux/GTKPromptUser.cpp \
 	   Linux/GTKProgressWnd.cpp 
endif

# wmctrl wrapper
CPPFLAGS += -I/usr/X11R6/include -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include
XTRALDLIBS += -lX11 -lXmu -lglib-2.0

Gen_Dev_Files +=
sources += \
	../utilities/linux/window_manager/WMController/WMController.cpp \
	../utilities/linux/window_manager/wmctrl/wmctrl.cpp \
	../utilities/linux/wrapper/wrapper_x11.cpp \
	../utilities/linux/wrapper/image_file.cpp \
	Linux/win_list_manager.cpp \
	Linux/OrbiterRenderer_Linux.cpp \
        Linux/WindowContext.cpp \
	DesignObj_Data.cpp \
	DesignObj_Orbiter.cpp \
	DesignObj_DataGrid.cpp \
	Simulator.cpp \
	OrbiterFileBrowser.cpp \
	Linux/OrbiterLinux.cpp \
	Linux/XRecordExtensionHandler.cpp \
	RendererMNG.cpp \
	GraphicBuilder.cpp \
	TextStyle.cpp \
	CacheImageManager.cpp \
	RendererOCG.cpp \
	ScreenHandler.cpp \
	CallBackData.cpp \
	ScreenHistory.cpp \
	PlutoGraphic.cpp \
	OrbiterRenderer.cpp \
	OrbiterRendererFactory.cpp \
	DataGridRenderer.cpp \
	ObjectRenderer.cpp \
	ObjectRendererFactory.cpp \
	SDL/OrbiterRenderer_SDL.cpp \
	SDL/SDLRendererOCGHelper.cpp \
	SDL/SDLGraphic.cpp \
	SDL/StartOrbiterSDL.cpp \
	$(ROOT)/Splitter/TextSplitter.cpp \
	$(ROOT)/Splitter/TextWrapper.cpp \
	../LIRC_DCE/IRReceiverBase.cpp \
	$(ROOT)/utilities/linux/transparency/transparency.cpp \


#<-dceag-mf-b->
LDLIBS = $(XTRALDLIBS) $(BASELDLIBS)

whattodo:
	@echo "type 'make bin', 'make so' or 'make all'"

all: bin so

bin: Orbiter

so: Orbiter.so

Orbiter.so: $(sources:.cpp=.o)
	$(CXX) -shared -o $(MYNAME).so $(call cpath,$+) $(LDFLAGS) $(LDLIBS)
	cp $@ ../bin
	chmod +x post_make.sh
	./post_make.sh $@
		
Orbiter: $(sources:.cpp=.o)
	$(CXX) -o $(MYNAME) $(call cpath,$+) $(LDFLAGS) $(LDLIBS)
	cp $@ ../bin
	./post_make.sh $@

clean: clean-recursive
	rm -f $(call cpath,$(sources:.cpp=.o) $(sources:.cpp=.d)) Orbiter Orbiter.so >/dev/null

package:
	chmod +x make_package.sh
	./make_package.sh $(MYNAME) $(VERSION) $(MYDEVTEMPLATEID)

include $(ROOT)/PlutoUtils/make.rules
ifeq (,$(findstring clean, $(MAKECMDGOALS)))
-include $(sources:.cpp=.d)
endif
#<-dceag-mf-e->

