#<-dceag-mh-b->
GENDEV=../Gen_Devices

SNR_CPPFLAGS ?= -DKDE_LMCE -DDEBUG -DTHREAD_LOG -DLOG_ALL_QUERIES
SNR_LDFLAGS ?= 

ROOT = ..
CXX = g++
CXXFLAGS = -Wall -fPIC -ggdb3
CPPFLAGS = -I$(ROOT) -I$(ROOT)/DCE $(SNR_CPPFLAGS)
LDFLAGS = $(SNR_LDFLAGS) -L$(ROOT)/lib
BASELDLIBS = -lSerializeClass -lDCECommon -lPlutoUtils -lpthread

MYSQL_FLAGS := $(shell pkg-config --cflags mysqlclient 2>/dev/null)
MYSQL_LIBS := $(shell pkg-config --libs mysqlclient 2>/dev/null)
ifneq (($(MYSQL_FLAGS)),)
	CPPFLAGS += $(MYSQL_FLAGS)
	BASELDLIBS += $(MYSQL_LIBS)
else
	CPPFLAGS += -I/usr/include/mysql
	BASELDLIBS += -lmysqlclient_r
endif

MYNAME = OrbiterGL
VERSION = 2.0.0
MYDEVTEMPLATEID = 8mplateID

Gen_Dev_Files = $(GENDEV)/OrbiterBase.cpp
sources = Main.cpp Orbiter.cpp $(Gen_Dev_Files)
#<-dceag-mh-e->

CXXFLAGS += -g -O0
CPPFLAGS += -DORBITER -DCACHE_IMAGES -DENABLE_MOUSE_BEHAVIOR -I$(ROOT)/Splitter -I$(ROOT)/OrbiterGen -I$(ROOT)/Orbiter -I/usr/include/SDL -DORBITER_OPENGL -DHID_REMOTE -DVIA_OVERLAY
LDFLAGS += -L/usr/X11R6/lib
XTRALDLIBS += -lDCECommon -lSDL_Helpers -lXtst -lGL -lGLU -lXrender -lXext -lSDL -lSDL_ttf -lSDL_image -lusb

# wmctrl wrapper
CPPFLAGS += -I/usr/X11R6/include -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include
XTRALDLIBS += -lX11 -lXmu -lglib-2.0 -lddmpeg

Gen_Dev_Files +=
sources += \
	$(WX_SOURCES) \
	../utilities/linux/window_manager/WMController/WMController.cpp \
	../utilities/linux/window_manager/wmctrl/wmctrl.cpp \
	../utilities/linux/wrapper/wrapper_x11.cpp \
	../utilities/linux/wrapper/image_file.cpp \
	Linux/win_list_manager.cpp \
	Linux/HIDInterface.cpp \
	Linux/OrbiterRenderer_Linux.cpp \
	Linux/WindowContext.cpp \
	DesignObj_Data.cpp \
	DesignObj_Orbiter.cpp \
	DesignObj_DataGrid.cpp \
	Simulator.cpp \
	OrbiterFileBrowser.cpp \
	Linux/OrbiterLinux.cpp \
	Linux/XRecordExtensionHandler.cpp \
	RendererMNG.cpp \
	GraphicBuilder.cpp \
	TextStyle.cpp \
	CacheImageManager.cpp \
	RendererOCG.cpp \
	ScreenHandler.cpp \
	CallBackData.cpp \
	ScreenHistory.cpp \
	MouseBehavior.cpp \
	LightMouseHandler.cpp \
	SpeedMouseHandler.cpp \
	VolumeMouseHandler.cpp \
	MediaMouseHandler.cpp \
	EPGMouseHandler.cpp \
	LockedMouseHandler.cpp \
	KeyboardMouseHandler.cpp \
	HorizMenuMouseHandler.cpp \
	MediaBrowserMouseHandler.cpp \
	DatagridMouseHandlerHelper.cpp \
	MouseGovernor.cpp \
	MouseIterator.cpp \
	PlutoGraphic.cpp \
	OrbiterRenderer.cpp \
	OrbiterRendererFactory.cpp \
	DataGridRenderer.cpp \
	ObjectRenderer.cpp \
	ObjectRendererFactory.cpp \
	Linux/OSDScreenHandler.cpp \
	Linux/MouseBehavior_Linux.cpp \
	WizardLogic.cpp \
	../CreateDevice/UserUtils.cpp \
	$(ROOT)/Splitter/TextSplitter.cpp \
	$(ROOT)/Splitter/TextWrapper.cpp \
	Linux/X3DButton.cpp Linux/X3DWindow.cpp Linux/XProgressWnd.cpp Linux/XPromptUser.cpp\
	SDL/StartOrbiterSDL.cpp \
	OpenGL/ExtensionManager.cpp \
	OpenGL/ObjectRenderer_OpenGL.cpp \
	OpenGL/GLMathUtils.cpp \
	OpenGL/OpenGL3DEngine.cpp \
	OpenGL/OrbiterRenderer_OpenGL.cpp \
	OpenGL/OpenGLGraphic.cpp \
	OpenGL/DatagridAnimationManager.cpp \
	OpenGL/Mesh/MeshBuilder.cpp \
	OpenGL/Mesh/MeshPainter.cpp \
	OpenGL/Mesh/MeshVertex.cpp \
	OpenGL/Mesh/MeshContainer.cpp \
	OpenGL/Mesh/MeshTransform.cpp \
	OpenGL/Mesh/Point3D.cpp \
	OpenGL/Mesh/MeshFrame.cpp \
	OpenGL/Mesh/MeshTriangle.cpp \
	OpenGL/Texture/TextureManager.cpp \
	OpenGL/Widgets/basewidget.cpp \
	OpenGL/Widgets/bezierwindow.cpp \
	OpenGL/Widgets/basicwindow.cpp \
	OpenGL/Widgets/DrawingWidgetsEngine.cpp	\
	OpenGL/Layers/GL2DEffectLayer.cpp \
	OpenGL/Layers/GL2DEffectLayersCompose.cpp \
	OpenGL/Layers/GLRenderScreenToGraphic.cpp \
	OpenGL/Effects/gl2deffectbeziertranzit.cpp \
	OpenGL/Effects/gl2deffectfadesfromunderneath.cpp \
	OpenGL/Effects/gl2deffectbeziertranzit_flow_slideleft.cpp \
	OpenGL/Effects/GL2DEffectHighLightArea.cpp \
	OpenGL/Effects/gl2deffectbeziertranzit_flow_slideleft_reverse.cpp \
	OpenGL/Effects/GL2DEffectHighLight.cpp \
	OpenGL/Effects/gl2deffectbeziertranzit_prism.cpp \
	OpenGL/Effects/GL2DEffectNoEffect.cpp \
	OpenGL/Effects/gl2deffectbeziertranzit_topleft.cpp \
	OpenGL/Effects/gl2deffectselectedarea.cpp \
	OpenGL/Effects/GL2DEffectBlending.cpp \
	OpenGL/Effects/gl2deffectslidefromleft.cpp \
	OpenGL/Effects/gl2deffect.cpp \
	OpenGL/Effects/gl2deffecttransit.cpp \
	OpenGL/Effects/gl2deffectfactory.cpp \
	OpenGL/Effects/GL2DEffectTransitionNoEffect.cpp \
	OpenGL/Effects/gl2deffectfadesfromtop.cpp \
	OpenGL/Effects/GL2DEffectWipeIn.cpp \
	OpenGL/PopupDescription.cpp \
	OpenGL/PopupCollection.cpp \
	OpenGL/AnimationScrollDatagrid.cpp \
	OpenGL/DataGridRenderer_OpenGL.cpp \
	../LIRC_DCE/IRReceiverBase.cpp \
	$(ROOT)/utilities/linux/transparency/transparency.cpp \
	OpenGL/VIA/ViaOverlay.cpp

#<-dceag-mf-b->
LDLIBS = $(XTRALDLIBS) $(BASELDLIBS)

whattodo:
	@echo "type 'make bin', 'make so' or 'make all'"

all: bin so

bin: OrbiterGL

so: OrbiterGL.so

OrbiterGL.so: $(sources:.cpp=.o)
	$(CXX) -shared -o $(MYNAME).so $(call cpath,$+) $(LDFLAGS) $(LDLIBS)
	cp $@ ../bin
	chmod +x post_make.sh
	./post_make.sh $@

OrbiterGL: $(sources:.cpp=.o)
	$(CXX) -o $(MYNAME) $(call cpath,$+) $(LDFLAGS) $(LDLIBS)
	cp $@ ../bin
	./post_make.sh $@

clean: clean-recursive
	rm -f $(call cpath,$(sources:.cpp=.o) $(sources:.cpp=.d)) OrbiterGL OrbiterGL.so >/dev/null

package:
	chmod +x make_package.sh
	./make_package.sh $(MYNAME) $(VERSION) $(MYDEVTEMPLATEID)

include $(ROOT)/PlutoUtils/make.rules
ifeq (,$(findstring clean, $(MAKECMDGOALS)))
-include $(sources:.cpp=.d)
endif
#<-dceag-mf-e->


