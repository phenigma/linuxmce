#############################################################################
# Makefile for building: HueController
# Generated by qmake (2.01a) (Qt 4.6.2) on: Wed Jan 8 18:33:11 2014
# Project:  HueController/HueController.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile HueController/HueController.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -IHueController -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I/usr/include/qjson -I../../trunk -I../DCE -I. -IHueController -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -lqjson -lQtGui -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = Main.cpp \
		../PlutoUtils/uuencode.cpp \
		../PlutoUtils/ThreadedClass.cpp \
		../PlutoUtils/Other.cpp \
		../PlutoUtils/MultiThreadIncludes.cpp \
		../PlutoUtils/minilzo.cpp \
		../PlutoUtils/md5c.cpp \
		../PlutoUtils/FileUtils.cpp \
		../PlutoUtils/CommonIncludes.cpp \
		../SerializeClass/SerializeClass.cpp \
		../DCE/Virtual_Device_Translator.cpp \
		../DCE/Socket.cpp \
		../DCE/ServerLogger.cpp \
		../DCE/PlainClientSocket.cpp \
		../DCE/MessageBuffer.cpp \
		../DCE/Message.cpp \
		../DCE/HandleRequestSocket.cpp \
		../DCE/Logger.cpp \
		../DCE/Event_Impl.cpp \
		../DCE/DCEConfig.cpp \
		../DCE/DataGrid.cpp \
		../DCE/Command_Impl.cpp \
		../DCE/AlarmManager.cpp \
		../PlutoUtils/StringUtils.cpp \
		../DCE/ClientSocket.cpp \
		../DCE/DeviceData_Base.cpp \
		../DCE/DeviceData_Impl.cpp \
		../PlutoUtils/getch.cpp \
		../Gen_Devices/Hue_ControllerBase.cpp \
		Hue_Controller.cpp \
		HueController/huecontrollerhardware.cpp \
		HueController/huebulb.cpp moc_Hue_Controller.cpp \
		moc_huecontrollerhardware.cpp \
		moc_huebulb.cpp
OBJECTS       = Main.o \
		uuencode.o \
		ThreadedClass.o \
		Other.o \
		MultiThreadIncludes.o \
		minilzo.o \
		md5c.o \
		FileUtils.o \
		CommonIncludes.o \
		SerializeClass.o \
		Virtual_Device_Translator.o \
		Socket.o \
		ServerLogger.o \
		PlainClientSocket.o \
		MessageBuffer.o \
		Message.o \
		HandleRequestSocket.o \
		Logger.o \
		Event_Impl.o \
		DCEConfig.o \
		DataGrid.o \
		Command_Impl.o \
		AlarmManager.o \
		StringUtils.o \
		ClientSocket.o \
		DeviceData_Base.o \
		DeviceData_Impl.o \
		getch.o \
		Hue_ControllerBase.o \
		Hue_Controller.o \
		huecontrollerhardware.o \
		huebulb.o \
		moc_Hue_Controller.o \
		moc_huecontrollerhardware.o \
		moc_huebulb.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		HueController/HueController.pro
QMAKE_TARGET  = HueController
DESTDIR       = 
TARGET        = HueController

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: HueController/HueController.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtNetwork.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -unix -o Makefile HueController/HueController.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtNetwork.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile HueController/HueController.pro

dist: 
	@$(CHK_DIR_EXISTS) HueController/.tmp/HueController1.0.0 || $(MKDIR) HueController/.tmp/HueController1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) HueController/.tmp/HueController1.0.0/ && $(COPY_FILE) --parents ../PlutoUtils/ThreadedClass.h ../PlutoUtils/MultiThreadIncludes.h ../PlutoUtils/StringUtils.h ../PlutoUtils/CommonIncludes.h ../PlutoUtils/Other.h ../PlutoUtils/getch.h ../PlutoUtils/MyStl.h ../DCE/DeviceData_Base.h ../DCE/Message.h ../DCE/ServerLogger.h ../DCE/Logger.h ../DCE/Virtual_Device_Translator.h ../DCE/PlutoLockLogger.h ../DCE/ClientSocket.h ../DCE/PlainClientSocket.h ../DCE/AlarmManager.h ../SerializeClass/SerializeClass.h ../PlutoUtils/FileUtils.h ../pluto_main/Define_DeviceCategory.h ../pluto_main/Define_DeviceTemplate.h ../Gen_Devices/Hue_ControllerBase.h Hue_Controller.h HueController/huecontrollerhardware.h HueController/huebulb.h HueController/.tmp/HueController1.0.0/ && $(COPY_FILE) --parents Main.cpp ../PlutoUtils/uuencode.cpp ../PlutoUtils/ThreadedClass.cpp ../PlutoUtils/Other.cpp ../PlutoUtils/MultiThreadIncludes.cpp ../PlutoUtils/minilzo.cpp ../PlutoUtils/md5c.cpp ../PlutoUtils/FileUtils.cpp ../PlutoUtils/CommonIncludes.cpp ../SerializeClass/SerializeClass.cpp ../DCE/Virtual_Device_Translator.cpp ../DCE/Socket.cpp ../DCE/ServerLogger.cpp ../DCE/PlainClientSocket.cpp ../DCE/MessageBuffer.cpp ../DCE/Message.cpp ../DCE/HandleRequestSocket.cpp ../DCE/Logger.cpp ../DCE/Event_Impl.cpp ../DCE/DCEConfig.cpp ../DCE/DataGrid.cpp ../DCE/Command_Impl.cpp ../DCE/AlarmManager.cpp ../PlutoUtils/StringUtils.cpp ../DCE/ClientSocket.cpp ../DCE/DeviceData_Base.cpp ../DCE/DeviceData_Impl.cpp ../PlutoUtils/getch.cpp ../Gen_Devices/Hue_ControllerBase.cpp Hue_Controller.cpp HueController/huecontrollerhardware.cpp HueController/huebulb.cpp HueController/.tmp/HueController1.0.0/ && (cd `dirname HueController/.tmp/HueController1.0.0` && $(TAR) HueController1.0.0.tar HueController1.0.0 && $(COMPRESS) HueController1.0.0.tar) && $(MOVE) `dirname HueController/.tmp/HueController1.0.0`/HueController1.0.0.tar.gz . && $(DEL_FILE) -r HueController/.tmp/HueController1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_Hue_Controller.cpp moc_huecontrollerhardware.cpp moc_huebulb.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_Hue_Controller.cpp moc_huecontrollerhardware.cpp moc_huebulb.cpp
moc_Hue_Controller.cpp: HueController/huecontrollerhardware.h \
		HueController/huebulb.h \
		Hue_Controller.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) Hue_Controller.h -o moc_Hue_Controller.cpp

moc_huecontrollerhardware.cpp: HueController/huecontrollerhardware.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) HueController/huecontrollerhardware.h -o moc_huecontrollerhardware.cpp

moc_huebulb.cpp: HueController/huebulb.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) HueController/huebulb.h -o moc_huebulb.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

Main.o: Main.cpp Hue_Controller.h \
		HueController/huecontrollerhardware.h \
		HueController/huebulb.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Main.o Main.cpp

uuencode.o: ../PlutoUtils/uuencode.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o uuencode.o ../PlutoUtils/uuencode.cpp

ThreadedClass.o: ../PlutoUtils/ThreadedClass.cpp ../PlutoUtils/ThreadedClass.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ThreadedClass.o ../PlutoUtils/ThreadedClass.cpp

Other.o: ../PlutoUtils/Other.cpp ../PlutoUtils/Other.h \
		../PlutoUtils/getch.h \
		../PlutoUtils/MyString.h \
		../PlutoUtils/StringUtils.h \
		../PlutoUtils/CommonIncludes.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Other.o ../PlutoUtils/Other.cpp

MultiThreadIncludes.o: ../PlutoUtils/MultiThreadIncludes.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o MultiThreadIncludes.o ../PlutoUtils/MultiThreadIncludes.cpp

minilzo.o: ../PlutoUtils/minilzo.cpp ../PlutoUtils/minilzo.h \
		../PlutoUtils/lzoconf.h \
		../PlutoUtils/lzodefs.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o minilzo.o ../PlutoUtils/minilzo.cpp

md5c.o: ../PlutoUtils/md5c.cpp ../PlutoUtils/md5.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o md5c.o ../PlutoUtils/md5c.cpp

FileUtils.o: ../PlutoUtils/FileUtils.cpp ../PlutoUtils/FileUtils.h \
		../PlutoUtils/MyString.h \
		../PlutoUtils/md5.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o FileUtils.o ../PlutoUtils/FileUtils.cpp

CommonIncludes.o: ../PlutoUtils/CommonIncludes.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CommonIncludes.o ../PlutoUtils/CommonIncludes.cpp

SerializeClass.o: ../SerializeClass/SerializeClass.cpp ../SerializeClass/SerializeClass.h \
		../PlutoUtils/MyString.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o SerializeClass.o ../SerializeClass/SerializeClass.cpp

Virtual_Device_Translator.o: ../DCE/Virtual_Device_Translator.cpp ../DCE/Virtual_Device_Translator.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Virtual_Device_Translator.o ../DCE/Virtual_Device_Translator.cpp

Socket.o: ../DCE/Socket.cpp ../DCE/Message.h \
		../DCE/Socket.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Socket.o ../DCE/Socket.cpp

ServerLogger.o: ../DCE/ServerLogger.cpp ../DCE/ServerLogger.h \
		../DCE/ClientSocket.h \
		../DCE/Socket.h \
		../DCE/AlarmManager.h \
		../DCE/Message.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ServerLogger.o ../DCE/ServerLogger.cpp

PlainClientSocket.o: ../DCE/PlainClientSocket.cpp ../DCE/Message.h \
		../DCE/PlainClientSocket.h \
		../DCE/ClientSocket.h \
		../DCE/Socket.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o PlainClientSocket.o ../DCE/PlainClientSocket.cpp

MessageBuffer.o: ../DCE/MessageBuffer.cpp ../DCE/Logger.h \
		../DCE/PlutoLockLogger.h \
		../DCE/MessageBuffer.h \
		../DCE/Message.h \
		../DCE/Command_Impl.h \
		../DCE/HandleRequestSocket.h \
		../DCE/ClientSocket.h \
		../DCE/Socket.h \
		../DCE/DeviceData_Impl.h \
		../DCE/Event_Impl.h \
		../DCE/DeviceData_Base.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o MessageBuffer.o ../DCE/MessageBuffer.cpp

Message.o: ../DCE/Message.cpp ../DCE/Message.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Message.o ../DCE/Message.cpp

HandleRequestSocket.o: ../DCE/HandleRequestSocket.cpp ../DCE/Socket.h \
		../DCE/Message.h \
		../DCE/HandleRequestSocket.h \
		../DCE/ClientSocket.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o HandleRequestSocket.o ../DCE/HandleRequestSocket.cpp

Logger.o: ../DCE/Logger.cpp ../DCE/Logger.h \
		../DCE/PlutoLockLogger.h \
		../DCE/Message.h \
		../DCE/DCEConfig.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Logger.o ../DCE/Logger.cpp

Event_Impl.o: ../DCE/Event_Impl.cpp ../DCE/Event_Impl.h \
		../DCE/ClientSocket.h \
		../DCE/Socket.h \
		../DCE/Message.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Event_Impl.o ../DCE/Event_Impl.cpp

DCEConfig.o: ../DCE/DCEConfig.cpp ../DCE/DCEConfig.h \
		../DCE/Logger.h \
		../DCE/PlutoLockLogger.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DCEConfig.o ../DCE/DCEConfig.cpp

DataGrid.o: ../DCE/DataGrid.cpp ../DCE/DataGrid.h \
		../Orbiter/PlutoGraphic.h \
		../DCE/Message.h \
		../DCE/Logger.h \
		../DCE/PlutoLockLogger.h \
		../Orbiter/CENet/WinCE.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DataGrid.o ../DCE/DataGrid.cpp

Command_Impl.o: ../DCE/Command_Impl.cpp ../DCE/DCERouter.h \
		../DCE/SocketListener.h \
		../DCE/ServerSocket.h \
		../DCE/Socket.h \
		../DCE/AlarmManager.h \
		../DCE/DeviceData_Router.h \
		../DCE/DeviceData_Impl.h \
		../DCE/Event_Impl.h \
		../DCE/ClientSocket.h \
		../DCE/Message.h \
		../DCE/DeviceData_Base.h \
		../DCE/Command_Impl.h \
		../DCE/HandleRequestSocket.h \
		../DCE/MessageBuffer.h \
		../DCE/PreformedCommand.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Command_Impl.o ../DCE/Command_Impl.cpp

AlarmManager.o: ../DCE/AlarmManager.cpp ../DCE/AlarmManager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o AlarmManager.o ../DCE/AlarmManager.cpp

StringUtils.o: ../PlutoUtils/StringUtils.cpp ../PlutoUtils/FileUtils.h \
		../PlutoUtils/MyString.h \
		../PlutoUtils/StringUtils.h \
		../PlutoUtils/CommonIncludes.h \
		../PlutoUtils/Other.h \
		../PlutoUtils/getch.h \
		../PlutoUtils/md5.h \
		../PlutoUtils/MultiThreadIncludes.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o StringUtils.o ../PlutoUtils/StringUtils.cpp

ClientSocket.o: ../DCE/ClientSocket.cpp ../DCE/Message.h \
		../DCE/ClientSocket.h \
		../DCE/Socket.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ClientSocket.o ../DCE/ClientSocket.cpp

DeviceData_Base.o: ../DCE/DeviceData_Base.cpp ../DCE/Logger.h \
		../DCE/PlutoLockLogger.h \
		../DCE/Command_Impl.h \
		../DCE/HandleRequestSocket.h \
		../DCE/ClientSocket.h \
		../DCE/Socket.h \
		../DCE/DeviceData_Impl.h \
		../DCE/Event_Impl.h \
		../DCE/Message.h \
		../DCE/DeviceData_Base.h \
		../DCE/MessageBuffer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DeviceData_Base.o ../DCE/DeviceData_Base.cpp

DeviceData_Impl.o: ../DCE/DeviceData_Impl.cpp ../DCE/DeviceData_Impl.h \
		../DCE/Event_Impl.h \
		../DCE/ClientSocket.h \
		../DCE/Socket.h \
		../DCE/Message.h \
		../DCE/DeviceData_Base.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DeviceData_Impl.o ../DCE/DeviceData_Impl.cpp

getch.o: ../PlutoUtils/getch.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o getch.o ../PlutoUtils/getch.cpp

Hue_ControllerBase.o: ../Gen_Devices/Hue_ControllerBase.cpp ../Gen_Devices/Hue_ControllerBase.h \
		../DCE/DeviceData_Impl.h \
		../DCE/Event_Impl.h \
		../DCE/ClientSocket.h \
		../DCE/Socket.h \
		../DCE/Message.h \
		../DCE/DeviceData_Base.h \
		../DCE/Command_Impl.h \
		../DCE/HandleRequestSocket.h \
		../DCE/MessageBuffer.h \
		../pluto_main/Define_Command.h \
		../pluto_main/Define_CommandParameter.h \
		../pluto_main/Define_DeviceTemplate.h \
		../pluto_main/Define_Event.h \
		../pluto_main/Define_EventParameter.h \
		../pluto_main/Define_DeviceData.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Hue_ControllerBase.o ../Gen_Devices/Hue_ControllerBase.cpp

Hue_Controller.o: Hue_Controller.cpp Hue_Controller.h \
		HueController/huecontrollerhardware.h \
		HueController/huebulb.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Hue_Controller.o Hue_Controller.cpp

huecontrollerhardware.o: HueController/huecontrollerhardware.cpp HueController/huecontrollerhardware.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o huecontrollerhardware.o HueController/huecontrollerhardware.cpp

huebulb.o: HueController/huebulb.cpp HueController/huebulb.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o huebulb.o HueController/huebulb.cpp

moc_Hue_Controller.o: moc_Hue_Controller.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Hue_Controller.o moc_Hue_Controller.cpp

moc_huecontrollerhardware.o: moc_huecontrollerhardware.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_huecontrollerhardware.o moc_huecontrollerhardware.cpp

moc_huebulb.o: moc_huebulb.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_huebulb.o moc_huebulb.cpp

####### Install

install_target: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/tmp/ || $(MKDIR) $(INSTALL_ROOT)/tmp/ 
	-$(INSTALL_PROGRAM) "$(QMAKE_TARGET)" "$(INSTALL_ROOT)/tmp/$(QMAKE_TARGET)"
	-$(STRIP) "$(INSTALL_ROOT)/tmp/$(QMAKE_TARGET)"

uninstall_target:  FORCE
	-$(DEL_FILE) "$(INSTALL_ROOT)/tmp/$(QMAKE_TARGET)"
	-$(DEL_DIR) $(INSTALL_ROOT)/tmp/ 


install:  install_target  FORCE

uninstall: uninstall_target   FORCE

FORCE:

