/*!
*\mainpage LinuxMCE QOrbiter
* \tableofcontents
*
* \section intro_docs Introduction
* QOrbiter is built by combining:
*  - The autogenerated c++ code stubs from dcegen
*  - The c++ framework Qt.
*
*   \subsection knowledge_base Recommended Knowledge Base
* Assumptions about the reader of this document. Certain topics in c++ will go outside of the scope of this document. However, the
* skin api is more focused on javascript. You will find the recommened knowledge base below for c++ or QML development.
*  - c++ / Qt  / stl
*   - Reader has an understanding of the fundamentals of c++, compiling programs.
*   - Reader has an understanding of common stl data structures
*   - Reader has a basic understanding of:
*     - QObject
*     - Qmake
*     - The concept of signal and slots
*  - QML/ Qt
*   - Reader has a basic understanding of  Declarative programming
*   - Reader is familiar with Javascript data structures
*   - Reader is familiar with JSON, XML structured data
*
* \subsection Resources
 Qt Resources | Link
------------- | -------------
Documentation Site  |  http://doc.qt.io/
Module Overviews  |  http://doc.qt.io/qt-5/overviews-main.html
QML Specific reference | http://doc.qt.io/qt-5/qmlreference.html
*
*
* \section getting_started Getting Started
* Getting setup to build qorbiter is not a difficult task for the novice or above developer. There are some steps to be aware of,
* but in general it just require a Qt development library, a source checkout of the linuxmce tree, outlined below, and some other
* resources. As there is no DCE simulation library at this point, you will need a working linuxmce core to point the application to
* besides going past the splash screen!
*
* If you are looking design a skin then you should just get a current copy for your os and checkout the code. Click \ref setup1 for more details.
*
* \section cplusplus C++ Code
This section references the c++ code that is a part of QOrbiter. It is split into two parts. \ref dcesection and the \ref qtsection
-# controllers - for both.
\subsection dcesection DCE Code
-# \ref dce_controllers
\subsection qtsection  Qt Code
-# \ref qt_controllers
\subsection qml QML Skins and Api Reference
-# \ref linuxmce_components
-# \ref qml_skins
-# \ref qml_api
\subsection sectSetup Setting up Build Environment
-# \ref setup1 - Setting up the build environment
*/

/*!
*\defgroup dce_controllers DCE-Controllers
*/

/*!
*\defgroup qt_controllers Qt-Controllers
*/

/*!
 * \defgroup data_models Datamodels
 * \ingroup qt_controllers
 */

/*!
* \defgroup qml_skins QML Skins
*/


/*!
* \defgroup linuxmce_components LinuxMCE Components
*/

/*!
 * \defgroup ui_buttons Ui Buttons
 * \ingroup linuxmce_components
 */

/*! \defgroup audio_visual Audio/Visual Components
    \ingroup linuxmce_components
*/

/*!
* \defgroup qml_api QML Skin Api
*/

 /*!
 * \defgroup context_objects Context Objects
 * \ingroup qml_api
 */


/*!
 *\defgroup alarms "alarms" Properties and Methods
 *\ingroup qml_api
 */

/*!
 *\defgroup timecode_properties "dcetimecode" Properties and Methods
 *\ingroup qml_api
 */

/*!
 *\defgroup file_details "filedetailsclass" Properties and Methods
 *\ingroup qml_api
 */

/*!
 * \defgroup now_playing "dcenowplaying" Properties and Methods.
 * \ingroup qml_api

/*!
 *\defgroup qorbiter_properties "manager" Properties and Methods
 *\ingroup qml_api
 */

/*!
 *\defgroup screen_params "screenparams" Properties and Methods
 *\ingroup qml_api
 */

/*!
 * \defgroup data_model Models and Lists
 * This part of the LinuxMCE Skin API contains the references for roles in various listmodels used in the QML application. A list of the c++ classes
 * is also availible for reference here as well.
 * - \ref user_list
 *
 * \ingroup qml_api
 */

/*!
 *\defgroup room_list "RoomList" Properties and methods
 * The list of rooms in the home is provided by the 'roomList' property. It is a c++ backed model that provides various properties and methods
 * to allow the user to select rooms.
 *
 * \ingroup data_model
 */

/*!
 *\defgroup startup_properties Startup Properties and Methods
 *\ingroup qml_properties
 */

/*!
*\defgroup qml_skins_default Default
*\ingroup qml_skins
*/
