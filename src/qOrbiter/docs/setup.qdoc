/*! \page setup1 Setting up Build Environment
 * \tableofcontents

 * \section pre_requisites Development setup links
 * Setting up QOrbiter will require you to download the linuxmce source, the Qt framework, and optionally additional libraries and frameworks, if you are
 * compiling for the android target
 *
 * \subsection ref_links Reference Links - Android builds are only supported on linux.
 - Qt - Choose Open source version for your platform
  - https://www.qt.io/download-open-source/
 - Linuxmce Sourc Code. This requires the use of SVN.
  - http://svn.linuxmce.org/svn/trunk/src
 *
 * \section generalsetups General Setup information
 *
 * You will need to get the linuxmce source tree to compile this application.
 * - SVN Location: http://svn.linuxmce.org/svn/trunk/src
 * - Checking this location out will yield the the parts of the LinuxMce source tree needed to build the application as well as
 *  the external assets needed.
 *
 * \section qtsetup Setting up build environment
 * You have many different options with how you get the Qt version of your choice installed.
 * - The supported method is to install Qt Development libraries from website. http://qt-project.org/downloads. Utilize the online installer.
 * - Compiling Qt from source is outside of the scope of this documentation, but information can be found here http://qt-project.org/wiki/Building_Qt_Documentation
 * - It is _highly_ recommended that you use QtCreator. Unless you are not into speed and ease of use.
 *
 * \section runningapplication Running QOrbiter
 * There are multiple build targets for QOrbiter. With this in mind,
 * QtCreator (which you should be using) make setup this very easy to do automatically.
 * \note QOrbiter has 1 plugin, AudioVisual. On android compilation is done for you, on x86, it is built automatically, assuming build instructions are followed.
 *
 *  \subsection run_desktop desktop/x86
 *  * To run the application, you need to open the .pro file, located in src/qOrbiter/qOrbiterMaster
 * - AudioVisual is set to automatically compile with this project.
 *
 * \sub_section run_android Android
 * \note The plugins are already setup to place the compiled plugin files (qmldir and shared lib file) into the qOrbiter 'imports' directory. You should not need to change this.
 *
 * \section androidsetup Setting up Android Builds
 *  Currently, the established method of building is to use Necessitas Alpha 4. This provides and integrated development environment (using qt creator) to produce the needed
 * Android resources and code to make your Qt Application run on Android. While Qt5 on Android is availible, it is not supported at this time. When it does become availible,
 * this documentation will be updated. In the unique build setup for building QOrbiter for the various platforms we are attempting to support, you need to be aware of
 * (2) Two different project files
 *
 *  \subsection necessitas4 Necessitas 4 setup - Qt 4.8 *
 * - Necessitas4 can be downloaded here : http://sourceforge.net/p/necessitas/home/necessitas/
 * -# You will need to open the project 'QOrbiter-Necessitas' in qOrbiter/QOrbiter_src/necessitas/QOrbiter-Necessitas
 * -# Setting up necessitas is outside the scope of this document. If you have issues, refer to its help for assistance.
 *
 *\subsection qt5android Qt for Android setup - Qt 5.1.0beta
 * - Qt5 for Android can be downloaded for the experienced developer here: http://qt-project.org/wiki/Qt5ForAndroidBuilding
 * -# Requires git
 * - Prebuilt binaries have also been release for Qt 5.1.0 beta. You can find them here: http://download.qt-project.org/development_releases/qt/5.1/5.1.0-beta1/
 *
 *
 *
 *
 *
 *
 *
 */
