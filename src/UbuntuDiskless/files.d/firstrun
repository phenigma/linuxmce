#!/bin/bash
set -e

. ./filesd-parms.sh $@
. /usr/pluto/bin/Config_Ops.sh
. /usr/pluto/bin/Network_Parameters.sh

## firstrun for diskless mds
File="/etc/init.d/firstrun"

if [[ ! -d "${Parm_RootLocation}/$(dirname $File)" ]]; then
	mkdir -p "${Parm_RootLocation}/$(dirname $File)"
fi

cat <<-'EOF' >"${Parm_RootLocation}/${File}"
	#!/bin/bash
	### BEGIN INIT INFO
	# Provides:          firstrun
	# Required-Start:    $remote_fs
	# Required-Stop:     $remote_fs
	# Should-Start:
	# Default-Start:     2 3 4 5
	# Default-Stop:
	# Short-Description: firstrun
	# Description:       This script is run the first time linuxmce boots
	### END INIT INFO #

	DEVICEDATA_DISTRO_Raspbian_Wheezy_CONST=19

	raspbian() {
		trap 'update-rc.d -f firstrun remove' EXIT

		echo -e "Updating RPI SDCARD from diskless image" >&2
		# copy contents of /boot to /sdcard
		mkdir -p /sdcard/
		mount /sdcard
		cp /boot/* /sdcard/

		echo -e "Creating cpu governor boot script" >&2
		cat <<-'EOFF' >/etc/init.d/switch_cpu_governor
		#!/bin/sh
		### BEGIN INIT INFO
		# Provides:          switch_cpu_governor
		# Required-Start: udev mountkernfs
		# Required-Stop:
		# Default-Start: S
		# Default-Stop:
		# Short-Description: Switch to ondemand cpu governor (unless shift key is pressed)
		# Description:
		### END INIT INFO
		##### Required-Start: udev mountkernfs $remote_fs

		. /lib/lsb/init-functions

		case "$1" in
		  start)
		    log_daemon_msg "Checking if shift key is held down"
		    timeout 1 thd --dump /dev/input/event* | grep -q "LEFTSHIFT\|RIGHTSHIFT"
		    if [ $? -eq 0 ]; then
		      printf " Yes. Not switching scaling governor"
		      log_end_msg 0
		    else
		      SYS_CPUFREQ_GOVERNOR=/sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
		      [ -e $SYS_CPUFREQ_GOVERNOR ] && echo "ondemand" > $SYS_CPUFREQ_GOVERNOR
		      echo 70 > /sys/devices/system/cpu/cpufreq/ondemand/up_threshold
		      printf " No. Switching to ondemand scaling governor"
		      log_end_msg 0
		    fi
		    ;;
		  *)
		    echo "Usage: $0 start" >&2
		    exit 3
		    ;;
		esac
		EOFF
		chmod +x /etc/init.d/switch_cpu_governor

		echo -e "Setting up boot scripts" >&2
		update-rc.d switch_cpu_governor defaults
		update-rc.d linuxmce defaults
		update-rc.d -f firstrun remove

		reboot
		return 0
	}

	ubuntu() {
		trap 'update-rc.d -f firstrun remove' EXIT

		apt-get update
		apt-get -y dist-upgrade
		update-pciids

		## Handle libdvdcss2
		dpkg -l libdvdcss2 | grep ^ii || find /usr/pluto/deb-cache/ -iname 'libdvdcss*' -exec dpkg -i {} \;

		## Install video driver
		. /usr/pluto/bin/Utils.sh
		CheckVideoDriver

		update-rc.d -f firstrun remove

		if echo "$Best_Video_Driver" | grep -Eq '(nvidia|fglrx|via|virge|savage)'; then
			sleep 5
			reboot
		fi
		return 0
	}

	start() {
		. /usr/pluto/bin/Config_Ops.sh

		case "$PK_Distro" in
			"$DEVICEDATA_DISTRO_Raspbian_Wheezy_CONST")
				raspbian
				err=$?
				;;
			*)
				ubuntu
				err=$?
		esac
		return $err
	}

	status() {
	        status_of_proc firstrun firstrun
		return $?
	}

	case "$1" in
	  start|"")
	        $1
		retval=$?
	        ;;
	  restart|reload|force-reload)
	        echo "Error: argument '$1' not supported" >&2
		retval=3
	        ;;
	  stop)
	        : # No-op
		retval=$?
	        ;;
	  status)
	        $1
	        retval=$?
	        ;;
	  *)
	        echo "Usage: $0 [start|stop|status]" >&2
		retval=3
	esac
	exit $retval
	:
	EOF
chmod +x "${Parm_RootLocation}/${File}"

LC_ALL=C chroot "${Parm_RootLocation}" update-rc.d -f firstrun start 50 2 3 4 5 . >/dev/null
